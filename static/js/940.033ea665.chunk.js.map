{"version":3,"file":"static/js/940.033ea665.chunk.js","mappings":"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","sources":["Schemas/authSchemas.js","components/RegisterForm/RegisterForm.styled.js","images/eye-hide.svg","components/RegisterForm/RegisterForm.jsx","redux/auth/authSelectors.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","page/Auth.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const RegisterSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string()\n    .min(6, 'Email must be at least 6 characters')\n    .email('Invalid email')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required'),\n});\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .email('Invalid email')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required'),\n});\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100%;\n  background: var(--welcomeBgColor);\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const Wrapper = styled.div`\n  background: var(--welcome-background-color);\n  border-radius: 8px;\n  padding: 40px;\n\n  @media screen and (max-width: 768px) {\n    padding: 24px;\n  }\n`;\n\nexport const Navigate = styled.div`\n  display: flex;\n`;\n\nexport const RegisterLink = styled(Link)`\n  margin-right: 14px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--welcome-hover-text-color);\n`;\n\nexport const LoginLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.3);\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 14px;\n\n  input {\n    width: 287px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n\n    color: var(--welcome-hover-text-color);\n    background: #1f1f1f;\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n\n    @media screen and (min-width: 768px) {\n      width: 326px;\n    }\n  }\n`;\nexport const PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.img`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\nexport const RegisterBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n\n  text-align: center;\n\n  background: #bedbb0;\n  border-radius: 8px;\n  color: var(--welcome-title-color);\n  cursor: pointer;\n\n  @media screen and (max-width: 768px) {\n    width: 287px;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 14px;\n  color: #bedbb070;\n`;\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEyeHide(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 800,\n    height: 800,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#787878\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"m2 2 20 20M6.713 6.723C3.665 8.795 2 12 2 12s3.636 7 10 7c2.05 0 3.817-.727 5.271-1.712M11 5.058A8.595 8.595 0 0 1 12 5c6.364 0 10 7 10 7s-.692 1.332-2 2.834\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#787878\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M14 14.236a3 3 0 0 1-4.13-4.348\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEyeHide);\nexport default __webpack_public_path__ + \"static/media/eye-hide.accfc4141682c117e0a89ff4d886ee4d.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport { toast } from 'react-toastify';\nimport { register } from '../../redux/auth/authOperations';\nimport { RegisterSchema } from '../../Schemas/authSchemas';\nimport {\n\tContainer,\n\tWrapper,\n\tNavigate,\n\tRegisterLink,\n\tLoginLink,\n\tErrorText,\n\tPasswordView,\n\tInputs,\n\tPasswordInput,\n\tPasswordIcon,\n\tSvg,\n\tRegisterBtn,\n} from './RegisterForm.styled';\nimport sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg'\n\nfunction RegisterForm() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newUser = {\n      name: event.target.elements.name.value,\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(register(newUser));\n\n    if (response.error) {\n\t\ttoast(response.payload);\n    } else {\n\t\tnavigate('/home');\n    }\n  };\n\n\treturn (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={RegisterSchema}\n        >\n          <Wrapper>\n            <Navigate>\n              <RegisterLink to=\"/register\" underline=\"none\">\n                Registration\n              </RegisterLink>\n              <LoginLink to=\"/login\" underline=\"none\">\n                Log In\n              </LoginLink>\n            </Navigate>\n            <Inputs>\n              <Field autoFocus name=\"name\" type=\"text\" placeholder=\"Name\" />\n              <ErrorText name=\"name\" component=\"div\" />\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordView\n                  className={`${PasswordView} ${PasswordIcon}`}\n                  onClick={togglePasswordVisibility}\n                >\n                  {showPassword ? (\n                    <PasswordIcon src={eyeHide} />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordView>\n              </PasswordInput>\n            </Inputs>\n            <RegisterBtn type=\"submit\">Register Now</RegisterBtn>\n          </Wrapper>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default RegisterForm;","export const setName = state => state.auth.user.name;\n\nexport const avatarURL = state => state.auth.user.avatarURL;\n\nexport const getTheme = state => state.auth.user.theme;\n\nexport const getActiveBoard = state => state.auth.user.activeBoard;\n\nexport const setToken = state => state.auth.token;\n\nexport const isLoggedIn = state => state.auth.isLoggedIn;\n\nexport const isRefreshing = state => state.auth.isRefreshing;\n\nexport const getError = state => state.auth.error;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const RegisterLink = styled(Link)`\n  margin-right: 14px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.3);\n`;\n\nexport const LoginLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--welcome-hover-text-color);\n`;\n\nexport const LoginBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n\n  text-align: center;\n\n  background: #bedbb0;\n  border-radius: 8px;\n  color: var(--welcome-title-color);\n  cursor: pointer;\n\n  @media screen and (max-width: 768px) {\n    width: 287px;\n  }\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\nimport { Formik, Field } from 'formik';\nimport { setToken } from 'redux/auth/authSelectors';\nimport {LoginSchema} from '../../Schemas/authSchemas';\nimport { toast } from 'react-toastify';\nimport {\n\tContainer,\n\tWrapper,\n\tNavigate,\t\n\tErrorText,\n\tPasswordView,\n\tInputs,\n\tPasswordInput,\n\tPasswordIcon,\n\tSvg,\n} from '../RegisterForm/RegisterForm.styled';\nimport {RegisterLink, LoginLink, LoginBtn,} from './LoginForm.styled'\nimport sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg'\n\n\nfunction LoginForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const currentUser = {\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(login(currentUser, setToken));\n\n    if (response.error) {\n      toast.error(response.payload);\n    } else {\n      navigate('/home');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={LoginSchema}\n        >\n          <Wrapper>\n            <Navigate>\n              <RegisterLink to=\"/register\" underline=\"none\">\n                Registration\n              </RegisterLink>\n              <LoginLink to=\"/login\" underline=\"none\">\n                Log In\n              </LoginLink>\n            </Navigate>\n            <Inputs>\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n\n                <PasswordView\n                  className={`${PasswordView} ${PasswordIcon}`}\n                  onClick={togglePasswordVisibility}\n                >\n                  {showPassword ? (\n                    <PasswordIcon src={eyeHide} />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordView>\n              </PasswordInput>\n            </Inputs>\n            <LoginBtn>Log In Now</LoginBtn>\n          </Wrapper>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default LoginForm;","import { useParams } from 'react-router-dom';\nimport RegisterForm from '../components/RegisterForm/RegisterForm'\nimport LoginForm from '../components/LoginForm/LoginForm'\nimport { ToastContainer } from 'react-toastify';\n\nconst Auth = () => {\n\tconst {register} = useParams();\n\t\n\t// console.log(blablabla)\n  return (\n\t  <div>\n\t\t  {/* <RegisterForm /> */}\n      {register === 'register' && <RegisterForm /> }\n      {register === 'login' && <LoginForm />}\n      <ToastContainer />\n    </div>\n  );\n};\nexport default Auth;\n"],"names":["RegisterSchema","Yup","shape","name","required","email","min","password","LoginSchema","Container","styled","Wrapper","Navigate","RegisterLink","Link","LoginLink","Inputs","PasswordInput","PasswordView","PasswordIcon","Svg","RegisterBtn","ErrorText","ErrorMessage","navigate","useNavigate","dispatch","useDispatch","useState","showPassword","setShowPassword","handleSubmit","event","preventDefault","newUser","target","elements","value","register","response","error","toast","payload","onSubmit","initialValues","validationSchema","to","underline","autoFocus","type","placeholder","component","className","onClick","src","eyeHide","stroke","href","sprite","setToken","state","auth","token","LoginBtn","currentUser","login","useParams"],"sourceRoot":""}