{"version":3,"file":"static/js/596.0572b77e.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","page/Auth.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100%;\n  background: var(--welcomeBgColor);\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const Wrapper = styled.div`\n  background: var(--welcome-background-color);\n  border-radius: 8px;\n  padding: 40px;\n\n  @media screen and (max-width: 767px) {\n    padding: 24px;\n  }\n`;\n\nexport const Navigate = styled.div`\n  display: flex;\n`;\n\nexport const RegisterLink = styled(Link)`\n  margin-right: 14px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--welcome-hover-text-color);\n`;\n\nexport const LoginLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.3);\n\n  &:hover,\n  &:focus {\n    color: #bedbb0;\n  }\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 14px;\n\n  input {\n    width: 287px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n\n    color: var(--welcome-hover-text-color);\n    background: #1f1f1f;\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n\n    @media screen and (min-width: 768px) {\n      width: 326px;\n    }\n  }\n`;\nexport const PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.img`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\nexport const RegisterBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n\n  text-align: center;\n\n  background: #bedbb0;\n  border: none;\n  border-radius: 8px;\n  color: var(--welcome-title-color);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #a1cf89;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 287px;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 14px;\n  color: #bedbb070;\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Field, Form } from 'formik';\nimport { toast } from 'react-toastify';\nimport { register } from '../../redux/auth/authOperations';\nimport { RegisterSchema } from '../../Schemas/authSchemas';\nimport {\n  Container,\n  Wrapper,\n  Navigate,\n  RegisterLink,\n  LoginLink,\n  ErrorText,\n  PasswordView,\n  Inputs,\n  PasswordInput,\n  PasswordIcon,\n  Svg,\n  RegisterBtn,\n} from './RegisterForm.styled';\nimport sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg';\n\nfunction RegisterForm() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onPasswordVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const newUser = {\n      ...values,\n    };\n    const response = await dispatch(register(newUser));\n\n    if (response.error) {\n      toast.error(response.payload);\n    } else {\n      navigate('/home');\n    }\n    resetForm();\n  };\n\n  return (\n    <Container>\n      <div>\n        <Formik\n          initialValues={{\n            name: '',\n            email: '',\n            password: '',\n          }}\n          validationSchema={RegisterSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ handleChange, values }) => (\n            <Form>\n              <Wrapper>\n                <Navigate>\n                  <RegisterLink to=\"/register\" underline=\"none\">\n                    Registration\n                  </RegisterLink>\n                  <LoginLink to=\"/login\" underline=\"none\">\n                    Log In\n                  </LoginLink>\n                </Navigate>\n                <Inputs>\n                  <Field\n                    autoFocus\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    onChange={handleChange('name')}\n                    value={values.name || ''}\n                  />\n                  <ErrorText name=\"name\" component=\"div\" />\n                  <Field\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    onChange={handleChange('email')}\n                    value={values.email || ''}\n                  />\n                  <ErrorText name=\"email\" component=\"div\" />\n                  <PasswordInput>\n                    <Field\n                      name=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"Password\"\n                      onChange={handleChange('password')}\n                      value={values.password || ''}\n                    />\n                    <ErrorText name=\"password\" component=\"div\" />\n                    <PasswordView\n                      className={`${PasswordView} ${PasswordIcon}`}\n                      onClick={onPasswordVisible}\n                    >\n                      {showPassword ? (\n                        <PasswordIcon src={eyeHide} />\n                      ) : (\n                        <Svg>\n                          <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                        </Svg>\n                      )}\n                    </PasswordView>\n                  </PasswordInput>\n                </Inputs>\n                <RegisterBtn type=\"submit\">Register Now</RegisterBtn>\n              </Wrapper>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Container>\n  );\n}\n\nexport default RegisterForm;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const RegisterLink = styled(Link)`\n  margin-right: 14px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.3);\n  font-size: 18px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 27px;\n\n  &:hover,\n  &:focus {\n    color: #bedbb0;\n  }\n`;\n\nexport const LoginLink = styled(Link)`\n  top: 40px;\n  left: 160px;\n  letter-spacing: -0.02em;\n  color: var(--welcome-hover-text-color);\n  font-size: 18px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 27px;\n`;\n\nexport const LoginBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  cursor: pointer;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: var(--welcome-title-color);\n  border: none;\n  border-radius: 8px;\n  background: #bedbb0;\n  font-size: 14px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 21px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #a1cf89;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 287px;\n  }\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Formik, Field, Form } from 'formik';\n\nimport { login } from 'redux/auth/authOperations';\nimport { setToken } from 'redux/auth/authSelectors';\nimport { LoginSchema } from '../../Schemas/authSchemas';\nimport sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg';\nimport {\n  Container,\n  Wrapper,\n  Navigate,\n  ErrorText,\n  PasswordView,\n  Inputs,\n  PasswordInput,\n  PasswordIcon,\n  Svg,\n} from '../RegisterForm/RegisterForm.styled';\nimport { RegisterLink, LoginLink, LoginBtn } from './LoginForm.styled';\n\nfunction LoginForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const onPasswordVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const currentUser = { ...values };\n    const response = await dispatch(login(currentUser, setToken));\n    if (response.error) {\n      toast.error(response.payload);\n    } else {\n      navigate('/home');\n    }\n    resetForm();\n  };\n\n  return (\n    <Container>\n      <div>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={LoginSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ handleChange, values }) => (\n            <Form>\n              <Wrapper>\n                <Navigate>\n                  <RegisterLink to=\"/register\" underline=\"none\">\n                    Registration\n                  </RegisterLink>\n                  <LoginLink to=\"/login\" underline=\"none\">\n                    Log In\n                  </LoginLink>\n                </Navigate>\n                <Inputs>\n                  <Field\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    onChange={handleChange('email')}\n                    value={values.email || ''}\n                  />\n                  <ErrorText name=\"email\" component=\"div\" />\n                  <PasswordInput>\n                    <Field\n                      name=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"Password\"\n                      onChange={handleChange('password')}\n                      value={values.password || ''}\n                    />\n                    <ErrorText name=\"password\" component=\"div\" />\n\n                    <PasswordView\n                      className={`${PasswordView} ${PasswordIcon}`}\n                      onClick={onPasswordVisible}\n                    >\n                      {showPassword ? (\n                        <PasswordIcon src={eyeHide} />\n                      ) : (\n                        <Svg>\n                          <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                        </Svg>\n                      )}\n                    </PasswordView>\n                  </PasswordInput>\n                </Inputs>\n                <LoginBtn type=\"submit\">Log In Now</LoginBtn>\n              </Wrapper>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Container>\n  );\n}\n\nexport default LoginForm;\n","import { useParams } from 'react-router-dom';\nimport RegisterForm from '../components/RegisterForm/RegisterForm';\nimport LoginForm from '../components/LoginForm/LoginForm';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Auth = () => {\n  const { id } = useParams();\n\n  return (\n    <div>\n      {id === 'register' && <RegisterForm />}\n      {id === 'login' && <LoginForm />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n    </div>\n  );\n};\nexport default Auth;\n"],"names":["Container","styled","Wrapper","Navigate","RegisterLink","Link","LoginLink","Inputs","PasswordInput","PasswordView","PasswordIcon","Svg","RegisterBtn","ErrorText","ErrorMessage","navigate","useNavigate","dispatch","useDispatch","useState","showPassword","setShowPassword","onPasswordVisible","handleSubmit","values","resetForm","newUser","register","response","error","toast","payload","initialValues","name","email","password","validationSchema","RegisterSchema","onSubmit","handleChange","to","underline","autoFocus","type","placeholder","onChange","value","component","className","onClick","src","eyeHide","stroke","href","sprite","LoginBtn","currentUser","login","setToken","LoginSchema","id","useParams","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}