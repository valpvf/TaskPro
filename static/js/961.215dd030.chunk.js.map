{"version":3,"file":"static/js/961.215dd030.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","page/Auth.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100%;\n  background: var(--welcomeBgColor);\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const Wrapper = styled.div`\n  background: var(--welcome-background-color);\n  border-radius: 8px;\n  padding: 40px;\n\n  @media screen and (max-width: 768px) {\n    padding: 24px;\n  }\n`;\n\nexport const Navigate = styled.div`\n  display: flex;\n`;\n\nexport const RegisterLink = styled(Link)`\n  margin-right: 14px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--welcome-hover-text-color);\n`;\n\nexport const LoginLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.3);\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 14px;\n\n  input {\n    width: 287px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n\n    color: var(--welcome-hover-text-color);\n    background: #1f1f1f;\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n\n    @media screen and (min-width: 768px) {\n      width: 326px;\n    }\n  }\n`;\nexport const PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.img`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\n\nexport const RegisterBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n\n  text-align: center;\n\n  background: #bedbb0;\n  border-radius: 8px;\n  color: var(--welcome-title-color);\n  cursor: pointer;\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 287px;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 14px;\n  color: #bedbb070;\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport { toast } from 'react-toastify';\nimport { register } from '../../redux/auth/authOperations';\nimport { RegisterSchema } from '../../Schemas/authSchemas';\nimport {\n  Container,\n  Wrapper,\n  Navigate,\n  RegisterLink,\n  LoginLink,\n  ErrorText,\n  PasswordView,\n  Inputs,\n  PasswordInput,\n  PasswordIcon,\n  Svg,\n  RegisterBtn,\n} from './RegisterForm.styled';\nimport sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg';\n\nfunction RegisterForm() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onPasswordVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newUser = {\n      name: event.target.elements.name.value,\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(register(newUser));\n\n    if (response.error) {\n\t\ttoast.error(response.payload);\n    } else {\n      navigate('/home');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={RegisterSchema}\n        >\n          <Wrapper>\n            <Navigate>\n              <RegisterLink to=\"/register\" underline=\"none\">\n                Registration\n              </RegisterLink>\n              <LoginLink to=\"/login\" underline=\"none\">\n                Log In\n              </LoginLink>\n            </Navigate>\n            <Inputs>\n              <Field autoFocus name=\"name\" type=\"text\" placeholder=\"Name\" />\n              <ErrorText name=\"name\" component=\"div\" />\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordView\n                  className={`${PasswordView} ${PasswordIcon}`}\n                  onClick={onPasswordVisible}\n                >\n                  {showPassword ? (\n                    <PasswordIcon src={eyeHide} />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordView>\n              </PasswordInput>\n            </Inputs>\n            <RegisterBtn type=\"submit\">Register Now</RegisterBtn>\n          </Wrapper>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default RegisterForm;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const RegisterLink = styled(Link)`\n  margin-right: 14px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.3);\n`;\n\nexport const LoginLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--welcome-hover-text-color);\n`;\n\nexport const LoginBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n\n  text-align: center;\n\n  background: #bedbb0;\n  border-radius: 8px;\n  color: var(--welcome-title-color);\n  cursor: pointer;\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 287px;\n  }\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\nimport { Formik, Field } from 'formik';\nimport { setToken } from 'redux/auth/authSelectors';\nimport {LoginSchema} from '../../Schemas/authSchemas';\nimport { toast } from 'react-toastify';\nimport {\n\tContainer,\n\tWrapper,\n\tNavigate,\t\n\tErrorText,\n\tPasswordView,\n\tInputs,\n\tPasswordInput,\n\tPasswordIcon,\n\tSvg,\n} from '../RegisterForm/RegisterForm.styled';\nimport {RegisterLink, LoginLink, LoginBtn,} from './LoginForm.styled'\nimport sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg'\n\n\nfunction LoginForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const onPasswordVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const currentUser = {\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(login(currentUser, setToken));\n\n    if (response.error) {\n      toast.error(response.payload);\n    } else {\n      navigate('/home');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={LoginSchema}\n        >\n          <Wrapper>\n            <Navigate>\n              <RegisterLink to=\"/register\" underline=\"none\">\n                Registration\n              </RegisterLink>\n              <LoginLink to=\"/login\" underline=\"none\">\n                Log In\n              </LoginLink>\n            </Navigate>\n            <Inputs>\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n\n                <PasswordView\n                  className={`${PasswordView} ${PasswordIcon}`}\n                  onClick={onPasswordVisible}\n                >\n                  {showPassword ? (\n                    <PasswordIcon src={eyeHide} />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordView>\n              </PasswordInput>\n            </Inputs>\n            <LoginBtn>Log In Now</LoginBtn>\n          </Wrapper>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default LoginForm;","import { useParams } from 'react-router-dom';\nimport RegisterForm from '../components/RegisterForm/RegisterForm';\nimport LoginForm from '../components/LoginForm/LoginForm';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Auth = () => {\n  const { id } = useParams();\n\n  return (\n    <div>\n      {id === 'register' && <RegisterForm />}\n      {id === 'login' && <LoginForm />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n    </div>\n  );\n};\nexport default Auth;\n"],"names":["Container","styled","Wrapper","Navigate","RegisterLink","Link","LoginLink","Inputs","PasswordInput","PasswordView","PasswordIcon","Svg","RegisterBtn","ErrorText","ErrorMessage","navigate","useNavigate","dispatch","useDispatch","useState","showPassword","setShowPassword","handleSubmit","event","preventDefault","newUser","name","target","elements","value","email","password","register","response","error","toast","payload","onSubmit","initialValues","validationSchema","RegisterSchema","to","underline","autoFocus","type","placeholder","component","className","onClick","src","eyeHide","stroke","href","sprite","LoginBtn","currentUser","login","setToken","LoginSchema","id","useParams","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}