{"version":3,"file":"static/js/726.b0c4f3c2.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfoStyled.js","components/EditUser/EditUser.styled.js","components/EditUser/EditUser.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalTitle/ModalTitle.styled.jsx","components/ModalTitle/ModalTitle.jsx","components/ModalEditProfile/ModalEditProfile.jsx","components/UserInfo/UserInfo.jsx","components/Header/HeaderStyled.js","components/Header/Header.jsx","shared/hooks/useTheme.js","components/ScreensPage/ScreensPageStyled.js","shared/components/button/Button.styled.jsx","shared/components/button/Button.jsx","shared/components/plusButton/PlusButton.styled.jsx","shared/components/plusButton/PlusButtons.jsx","shared/components/inputField/InputField.styled.jsx","shared/components/inputField/InputField.jsx","shared/components/radioButtons/RadioColored.jsx","shared/components/inputErrorMessage/InputErrorMessage.styled.jsx","shared/components/inputErrorMessage/InputErrorMessage.jsx","images/chevron-down.svg","images/chevron-down-blue.svg","components/ModalCard/ModalCard.styled.js","components/ModalCard/ModalCard.jsx","components/ModalProgress/ModalProgress.styled.js","shared/components/radioButtons/RadioTooltip.styled.jsx","shared/components/radioButtons/RadioTooltip.jsx","components/ModalProgress/ModalProgress.jsx","shared/components/modalConfirm/ModalConfirm.styled.jsx","shared/components/modalConfirm/ModalConfirm.jsx","components/Card/Card.styled.js","components/Card/Card.jsx","components/ModalColumn/ModalColumn.jsx","shared/components/radioButtons/RadioFilters.styled.jsx","shared/components/radioButtons/RadioFilters.jsx","components/ModalFilters/ModalFilters.styled.js","components/ModalFilters/ModalFilters.jsx","components/Column/Column.styled.js","components/Column/Column.jsx","components/ScreensPage/ScreensPage.jsx","shared/components/radioButtons/RadioImages.styled.jsx","shared/components/radioButtons/RadioImages.jsx","shared/components/radioButtons/RadioIcons.styled.jsx","shared/components/radioButtons/RadioIcons.jsx","components/ModalBoard/ModalBoard.styled.js","components/ModalBoard/ModalBoard.jsx","shared/utilities/fetchHelp.js","components/ModalNeedHelp/ModalNeedHelp.styled.js","components/ModalNeedHelp/ModalNeedHelp.jsx","components/Sidebar/SidebarStyled.js","components/Sidebar/Sidebar.jsx","components/Sidebar/Backdrop.js","page/Home.jsx","images/background|sync|/^/.//.*$"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: 14px;\n`;\n\nexport const AvasarSetin = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const IconAvatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  border: 1px solid var(--avatar-border-color);\n  border-radius: 5px;\n  fill: var(--user-icon-fill-color);\n  stroke: var(--user-icon-stroke-color);\n  &:hover {\n    box-shadow: 0px 6px 7px 1px var(--user-edit-icon-plus-hover-color);\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  fill: var(--user-icon-plus-fill-color);\n  stroke: var(--user-icon-plus-stroke-color);\n  top: 27px;\n  left: 10px;\n`;\n\nexport const AvatarImg = styled.img`\n  display: block;\n  width: 32px;\n  height: 32px;\n  &:hover {\n    box-shadow: 0px 6px 7px 1px var(--user-edit-icon-plus-hover-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n  cursor: pointer;\n`;\n\nexport const IconUser = styled.svg`\n  width: 68px;\n  height: 68px;\n  cursor: pointer;\n  border: 1px solid var(--avatar-border-color);\n  border-radius: 10px;\n  fill: var(--user-icon-fill-color);\n  stroke: var(--user-icon-stroke-color);\n  &:hover {\n    box-shadow: 0px 6px 7px 1px var(--user-edit-icon-plus-hover-color);\n  }\n`;\n\nexport const AvatarImg = styled.img`\n  width: 68px;\n  height: 68px;\n  cursor: pointer;\n  border-radius: 10px;\n  &:hover {\n    box-shadow: 0px 6px 7px 1px var(--user-edit-icon-plus-hover-color);\n  }\n`;\n\nexport const FileInputWrapper = styled.label`\n  position: absolute;\n  bottom: -12px;\n  left: 50%;\n  display: inline-block;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  transform: translateX(-50%);\n  color: var(--welcome-title-color);\n  border-radius: 20%;\n  background-color: var(--user-edit-icon-plus-fill-color);\n  font-size: 18px;\n  font-size: 14px;\n  &:hover {\n    background-color: var(--user-edit-icon-plus-hover-color);\n  }\n`;\n\nexport const FileInput = styled.input`\n  display: none;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 24px;\n  gap: 14px;\n\n  input {\n    top: 107px;\n    left: 40px;\n    height: 49px;\n    padding-left: 18px;\n    opacity: 0.4;\n    color: var(--welcome-hover-text-color);\n    border: 1px solid #bedbb0;\n    border-radius: 8px;\n    outline: none;\n    background: #1f1f1f;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.img`\n  top: 50%;\n  right: 4px;\n  width: 16.5px;\n  height: 16px;\n`;\n\nexport const Svg = styled.svg`\n  top: 50%;\n  right: 4px;\n  width: 16.5px;\n  height: 16px;\n`;\n\nexport const SendBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  cursor: pointer;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: var(--welcome-title-color);\n  border: none;\n  border-radius: 8px;\n  background: #bedbb0;\n  font-size: 14px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 21px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #a1cf89;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: #bedbb070;\n  font-size: 14px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Field } from 'formik';\n\nimport { UpdateUserSchema } from '../../Schemas/authSchemas';\nimport { getUserData } from 'redux/auth/authSelectors';\nimport { updateUser } from '../../redux/auth/authOperations';\nimport sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg';\nimport {\n  Wrapper,\n  AvatarWrapper,\n  FileInputWrapper,\n  IconUser,\n  AvatarImg,\n  Inputs,\n  FileInput,\n  PasswordView,\n  PasswordInput,\n  PasswordIcon,\n  Svg,\n  SendBtn,\n  ErrorText,\n} from './EditUser.styled';\n\nfunction EditUser({ onClose }) {\n  const dispatch = useDispatch();\n  const userData = useSelector(getUserData);\n\n  const [imageUrl, setImageUrl] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [userName, setUserName] = useState(userData.name);\n  const [userEmail, setUserEmail] = useState(userData.email);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onPasswordVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  useEffect(() => {\n    if (imageFile) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setImageUrl(event.target.result);\n      };\n      reader.readAsDataURL(imageFile);\n    }\n  }, [imageFile]);\n\n  const handleFileChange = event => {\n    setImageFile(event.target.files[0]);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = e.target.elements;\n\n    const newUserData = {\n      name: name.value || userData.name,\n      email: email.value || userData.email,\n    };\n\n    if (password.value) {\n      newUserData.password = password.value;\n    }\n\n    if (imageFile) {\n      newUserData.avatar = imageFile;\n    }\n\n    dispatch(updateUser(newUserData));\n    onClose();\n  };\n\n  return (\n    <>\n      <form onSubmit={formSubmit}>\n        <Formik\n          initialValues={{\n            name: userName,\n            email: userEmail,\n            password: '',\n          }}\n          validationSchema={UpdateUserSchema}\n        >\n          <Wrapper>\n            <AvatarWrapper>\n              {!imageUrl && !userData.avatarURL ? (\n                <IconUser>\n                  <use href={`${sprite}#icon-user`}></use>\n                </IconUser>\n              ) : (\n                <AvatarImg\n                  src={imageUrl || userData.avatarURL}\n                  alt=\"avatar\"\n                  width={68}\n                  height={68}\n                />\n              )}\n\n              <FileInputWrapper>\n                <FileInput\n                  type=\"file\"\n                  onChange={handleFileChange}\n                  accept=\"image/jpeg, image/png, image/gif\"\n                />\n                +\n              </FileInputWrapper>\n            </AvatarWrapper>\n\n            <Inputs>\n              <Field\n                autoFocus\n                name=\"name\"\n                type=\"text\"\n                value={userName}\n                onChange={e => setUserName(e.target.value)}\n              />\n              <Field\n                name=\"email\"\n                type=\"email\"\n                value={userEmail}\n                onChange={e => setUserEmail(e.target.value)}\n              />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordView\n                  className={`${PasswordView} ${PasswordIcon}`}\n                  onClick={onPasswordVisible}\n                >\n                  {showPassword ? (\n                    <PasswordIcon src={eyeHide} />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordView>\n              </PasswordInput>\n            </Inputs>\n            <SendBtn type=\"submit\">Send</SendBtn>\n          </Wrapper>\n        </Formik>\n      </form>\n    </>\n  );\n}\n\nexport default EditUser;\n","import styled from '@emotion/styled';\nimport '../../shared/basicStyles/variables.scss';\n\nexport const BackdropStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow-y: auto;\n  width: 100%;\n  height: 100%;\n  background-color: var(--modal-backdrop-background-color);\n  z-index: 100;\n`;\n\nexport const ModalWindowStyled = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  padding: 24px;\n  transform: translate(-50%, -50%);\n  border-radius: 8px;\n  background-color: var(--modal-window-color);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  box-shadow: 0px 4px 16px 0px var(--modal-window-shadow);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: ${props => (props.custom ? '400px' : '350px')};\n  }\n\n  @media screen and (max-height: 500px) and (orientation: landscape) {\n    position: sticky;\n    top: 0;\n    left: 50%;\n    transform: translate(-50%, 0%);\n  }\n`;\n\nexport const CloseBtnStyled = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  border-radius: 50%;\n  background-color: transparent;\n\n  &:hover,\n  :focus {\n    background-color: var(--secondary-button-color);\n  }\n`;\n\nexport const IconStyled = styled.svg`\n  stroke: var(--modal-close-icon-color);\n`;\n","import { useEffect } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport {\n  BackdropStyled,\n  ModalWindowStyled,\n  CloseBtnStyled,\n  IconStyled,\n} from './Modal.styled';\n\nconst Modal = ({ children, onClose, custom }) => {\n  const handleClose = e => {\n    e.stopPropagation();\n    onClose();\n  };\n\n  const onCloseBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      e.stopPropagation();\n      onClose();\n    }\n  };\n\n  function onCloseEscape(e) {\n    if (e.key === 'Escape') {\n      e.stopPropagation();\n      onClose();\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', onCloseEscape);\n    return () => {\n      window.removeEventListener('keydown', onCloseEscape);\n    };\n  });\n\n  return (\n    <BackdropStyled onClick={onCloseBackdrop}>\n      <ModalWindowStyled custom={custom ? true : false}>\n        <CloseBtnStyled onClick={handleClose}>\n          <IconStyled width={18} height={18}>\n            <use href={`${sprite}#icon-close`}></use>\n          </IconStyled>\n        </CloseBtnStyled>\n        {children}\n      </ModalWindowStyled>\n    </BackdropStyled>\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\nimport '../../shared/basicStyles/variables.scss';\n\nexport const TitleStyled = styled.h2`\n  margin-bottom: 24px;\n  color: var(--modal-title-color);\n  font-family: 'Poppins', sans-serif;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.36px;\n`;\n","import { TitleStyled } from './ModalTitle.styled';\n\nconst ModalTitle = ({ children }) => {\n  return <TitleStyled>{children}</TitleStyled>;\n};\n\nexport default ModalTitle;\n","import EditUser from 'components/EditUser/EditUser';\nimport Modal from 'components/Modal/Modal';\nimport ModalTitle from 'components/ModalTitle/ModalTitle';\n\nconst ModalEditProfile = ({ onClose }) => {\n  return (\n    <Modal onClose={onClose} custom={true}>\n      <ModalTitle>Edit profile</ModalTitle>\n      <EditUser onClose={onClose} />\n    </Modal>\n  );\n};\n\nexport default ModalEditProfile;\n","import { useState } from 'react';\nimport icons from '../../images/sprite.svg';\nimport {\n  IconAvatar,\n  Container,\n  IconPlus,\n  AvasarSetin,\n  AvatarImg,\n} from './UserInfoStyled';\nimport ModalEditProfile from 'components/ModalEditProfile/ModalEditProfile';\nimport { useSelector } from 'react-redux';\nimport { avatarURL, setName } from 'redux/auth/authSelectors';\n\nconst UserInfo = () => {\n  const name = useSelector(setName);\n  const avatar = useSelector(avatarURL);\n  const [showModal, setShowModal] = useState(false);\n\n  const onOpen = () => {\n    setShowModal(true);\n  };\n  const onClose = () => {\n    setShowModal(false);\n  };\n  return (\n    <Container>\n      <div>{name ? name : 'User'}</div>\n      <AvasarSetin onClick={onOpen}>\n        {avatar ? (\n          <AvatarImg src={avatar} alt=\"user avatar\" />\n        ) : (\n          <IconAvatar>\n            <use href={`${icons}#icon-user`}></use>\n          </IconAvatar>\n        )}\n        <div>\n          <IconPlus>\n            <use href={`${icons}#icon-plus-01`}></use>\n          </IconPlus>\n        </div>\n      </AvasarSetin>\n      {showModal && <ModalEditProfile onClose={onClose} />}\n    </Container>\n  );\n};\n\nexport default UserInfo;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 68px;\n  padding-right: 24px;\n  color: var(--primary-heading-color);\n  background-color: var(--header-background-color);\n\n  @media (max-width: 767px) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  @media (max-width: 1439px) {\n    padding-left: 20px;\n    padding-right: 32px;\n  }\n`;\n\nexport const IconBM = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: var(--primary-icon-stroke-color);\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n\n  &:hover {\n    box-shadow: 0px 6px 7px 1px var(--user-edit-icon-plus-hover-color);\n  }\n`;\n\nexport const HeaderInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const CustomSelect = styled.div`\n  position: relative;\n`;\n\nexport const CustomOptionList = styled.ul`\n  position: absolute;\n  display: ${props => (props.open ? 'block' : 'none')};\n  top: 20px;\n  left: -105px;\n  margin: 0;\n  padding: 18px 44px 18px 18px;\n  list-style: none;\n  border: solid 1px var(--theme-switcher-dropdown-border-color);\n  border-radius: 8px;\n  background-color: var(--header-background-color);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  z-index: 1;\n`;\n\nexport const CustomOption = styled.li`\n  padding: 5px 10px;\n  cursor: pointer;\n  color: var(--theme-switcher-dropdown-text-color);\n\n  &:hover {\n    color: var(--theme-switcher-dropdown-hover-color);\n  }\n\n  ${props =>\n    props.selected &&\n    `\n      color: var(--primary-button-color);\n    `}\n`;\n\nexport const TheamBtn = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  &:hover {\n    padding: 5px;\n    box-shadow: 0px 6px 7px -5px var(--user-edit-icon-plus-hover-color);\n  }\n`;\n\nexport const IconDown = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  fill: transparent;\n  stroke: var(--primary-icon-stroke-color);\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { updateTheme } from 'redux/auth/authOperations';\nimport { useTheme } from 'shared/hooks/useTheme';\nimport icons from '../../images/sprite.svg';\nimport {\n  Container,\n  HeaderInfo,\n  IconBM,\n  CustomSelect,\n  CustomOption,\n  CustomOptionList,\n  IconDown,\n  TheamBtn,\n} from './HeaderStyled';\n\nconst Header = ({ onToggleSidebar }) => {\n  const dispatch = useDispatch();\n  const { theme, setTheme } = useTheme();\n\n  const [selectedTheme, setSelectedTheme] = useState('dark');\n  const [isCustomOptionListOpen, setCustomOptionListOpen] = useState(false);\n\n  const toggleCustomOptionList = () => {\n    setCustomOptionListOpen(!isCustomOptionListOpen);\n  };\n\n  const handleLightThemeClick = () => {\n    setTheme('light');\n    setSelectedTheme('light');\n    dispatch(updateTheme('light'));\n    toggleCustomOptionList();\n  };\n\n  const handleDarkThemeClick = () => {\n    setTheme('dark');\n    setSelectedTheme('dark');\n    dispatch(updateTheme('dark'));\n    toggleCustomOptionList();\n  };\n\n  const handleVioletThemeClick = () => {\n    setTheme('violet');\n    setSelectedTheme('violet');\n    dispatch(updateTheme('violet'));\n    toggleCustomOptionList();\n  };\n\n  return (\n    <Container>\n      <div onClick={onToggleSidebar}>\n        <IconBM>\n          <use href={`${icons}#icon-menu`}></use>\n        </IconBM>\n      </div>\n      <HeaderInfo>\n        <TheamBtn onClick={toggleCustomOptionList}>\n          Theme\n          <IconDown>\n            <use href={`${icons}#icon-chevron-down`}></use>\n          </IconDown>\n        </TheamBtn>\n\n        <CustomSelect theme={theme}>\n          <CustomOptionList open={isCustomOptionListOpen}>\n            <CustomOption\n              onClick={() => handleLightThemeClick()}\n              selected={selectedTheme === 'light'}\n            >\n              Light\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleDarkThemeClick()}\n              selected={selectedTheme === 'dark'}\n            >\n              Dark\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleVioletThemeClick('violet')}\n              selected={selectedTheme === 'violet'}\n            >\n              Violet\n            </CustomOption>\n          </CustomOptionList>\n        </CustomSelect>\n\n        <UserInfo />\n      </HeaderInfo>\n    </Container>\n  );\n};\n\nexport default Header;\n","import { useLayoutEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { getTheme } from 'redux/auth/authSelectors';\n\nexport const useTheme = () => {\n  const initialTheme = useSelector(getTheme);\n  const [theme, setTheme] = useState(initialTheme || 'dark');\n\n  useLayoutEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  return { theme, setTheme };\n};\n","import styled from '@emotion/styled';\n\n\nexport const Container = styled.div`\n  background-color: var(--secondary-background-color);\n  background-position-y: bottom;\n  background-position-x: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  flex-grow: 1;\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-bottom: 5px;\n\n  @media screen and (min-width: 320px) {\n    padding-left: 10px;\n    background-image: ${props =>\n      props.isBoardActive &&\n      props.picture !== '00' &&\n      `url('images/background/${props.picture}m.jpg')`};\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.isBoardActive &&\n        props.picture !== '00' &&\n        `url('images/background/${props.picture}m2.jpg')`};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: ${props =>\n      props.isBoardActive &&\n      props.picture !== '00' &&\n      `url('images/background/${props.picture}t.jpg')`};\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.isBoardActive &&\n        props.picture !== '00' &&\n        `url('images/background/${props.picture}t2.jpg')`};\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100vw - 260px);\n    background-image: ${props =>\n      props.isBoardActive &&\n      props.picture !== '00' &&\n      `url('images/background/${props.picture}d.jpg')`};\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.isBoardActive &&\n        props.picture !== '00' &&\n        `url('images/background/${props.picture}d2.jpg')`};\n    }\n  }\n`;\n\nexport const TutorialContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TutorialTitle = styled.p`\n  display: block;\n  width: 486px;\n  text-align: center;\n  font-family: Poppins;\n  line-height: calc(18 / 14);\n  letter-spacing: -0.28px;\n  color: var(--screens-page-tutorial-text-color);\n\n  @media screen and (max-width: 320px) {\n    font-size: 12px;\n    line-height: calc(16 / 12);\n  }\n`;\n\nexport const TutorialSelected = styled.span`\n  color: var(--primary-button-color);\n`;\n\nexport const ScreensHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  @media screen and (max-width: 767.8px) {\n    flex-wrap: wrap;\n  }\n`;\n\nexport const HeadersWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const HeaderTxt = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--primary-heading-color);\n`;\n\nexport const HeaderFiltres = styled.div`\n  display: flex;\n  align-items: center;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n\n  cursor: pointer;\n`;\n\nexport const HeaderAddColumn = styled(HeaderFiltres)`\n  margin-left: auto;\n  margin-right: 58px;\n\n  cursor: pointer;\n\n  @media screen and (max-width: 767.8px) {\n    margin-right: 20px;\n  }\n\n  @media screen and (max-width: 320px) {\n    margin-right: 10px;\n  }\n`;\n\nexport const IconFiltre = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n\n  fill: none;\n  stroke: var(--primary-icon-stroke-color);\n`;\n\nexport const IconPlusFilters = styled(IconFiltre)`\n  width: 24px;\n  height: 18px;\n\n  stroke-width: 2px;\n`;\n\nexport const AddColumn = styled.div`\n  display: flex;\n  align-items: center;\n  max-height: 500px; /* Adjust the height as needed */\n  overflow-y: auto;\n\n  width: 334px;\n  height: 56px;\n  background-color: var(--add-column-button-color);\n\n  border-radius: 8px;\n`;\n\nexport const IconPlus = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: var(--column-icon-plus-color);\n  stroke: var(--column-icon-plus-stroke-color);\n  margin-right: 8px;\n`;\n\nexport const ColumnsContainer = styled.div`\n  display: flex;\n  text-align: justify;\n  justify-items: center;\n  gap: 22px;\n  max-width: 75vw;\n  height: 95%;\n  overflow-x: auto;\n\n  ::-webkit-scrollbar {\n    background-color: var(--scrollbar-base-color);\n    border-radius: 10px;\n    width: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--scrollbar-background-color);\n    border-radius: 10px;\n  }\n  @media (min-width: 1440px) {\n    max-width: 87vw;\n    ::-webkit-scrollbar {\n      background-color: var(--scrollbar-base-color);\n      border-radius: 10px;\n      width: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: var(--scrollbar-background-color);\n      border-radius: 10px;\n    }\n  }\n  @media (min-width: 768px) and (max-width: 1439px) {\n    flex-shrink: 0;\n    max-height: 95vh;\n    max-width: 98vw;\n    overflow-y: auto;\n    ::-webkit-scrollbar {\n      background-color: var(--scrollbar-base-color);\n      border-radius: 10px;\n      width: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: var(--scrollbar-background-color);\n      border-radius: 10px;\n    }\n  }\n  @media (min-width: 320px) and (max-width: 767px) {\n    flex-shrink: 0;\n    max-width: 95vw;\n    overflow-y: auto;\n    ::-webkit-scrollbar {\n      background-color: var(--scrollbar-base-color);\n      border-radius: 10px;\n      width: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: var(--scrollbar-background-color);\n      border-radius: 10px;\n    }\n  }\n`;\n\nexport const ButtonAdd = styled.button`\n  margin-left: 80px;\n  color: var(--primary-heading-color);\n  display: flex;\n  align-items: center;\n  border: none;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n`;\n\nexport const ColumnWrapper = styled.div`\n  flex-shrink: 0;\n  max-height: 60vh;\n  overflow-y: auto;\n  ::-webkit-scrollbar {\n    background-color: var(--scrollbar-base-color);\n    border-radius: 10px;\n    width: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--scrollbar-background-color);\n    border-radius: 10px;\n  }\n  @media (min-width: 1440px) {\n    flex-shrink: 0;\n    max-height: 75vh;\n    overflow-y: auto;\n    ::-webkit-scrollbar {\n      background-color: var(--scrollbar-base-color);\n      border-radius: 10px;\n      width: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: var(--scrollbar-background-color);\n      border-radius: 10px;\n    }\n  }\n  @media (min-width: 720px) and (max-width: 1439px) {\n    flex-shrink: 0;\n    max-height: 62vh;\n    overflow-y: auto;\n    ::-webkit-scrollbar {\n      background-color: var(--scrollbar-base-color);\n      border-radius: 10px;\n      width: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: var(--scrollbar-background-color);\n      border-radius: 10px;\n    }\n  }\n  @media (min-width: 320px) and (max-width: 720px) {\n    flex-shrink: 0;\n    max-height: 62vh;\n    overflow-y: auto;\n    ::-webkit-scrollbar {\n      background-color: var(--scrollbar-base-color);\n      border-radius: 10px;\n      width: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: var(--scrollbar-background-color);\n      border-radius: 10px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\n\nexport const StyledButton = styled(Button)`\n  gap: 8px;\n  width: 100%;\n  height: 49px;\n  margin-top: 17px;\n  margin-bottom: 10px;\n  box-sizing: border-box;\n  border-radius: 8px;\n  background-color: var(--primary-button-color);\n  color: var(--shared-button-text-color);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  text-transform: none !important;\n\n  &:hover,\n  :focus {\n    background-color: var(--secondary-button-color);\n  }\n`;\n","import { StyledButton } from './Button.styled';\nimport { StyledEngineProvider } from '@mui/material/styles';\n\nconst ButtonMain = ({ children, onClick }) => {\n  return (\n    <StyledEngineProvider injectFirst>\n      <StyledButton onClick={onClick} type=\"submit\">\n        {children}\n      </StyledButton>\n    </StyledEngineProvider>\n  );\n};\n\nexport default ButtonMain;\n","import styled from '@emotion/styled';\n\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const PlusIcon = styled(AddIcon)`\n  display: block;\n  width: 14px;\n  height: 14px;\n  color: var(--shared-plus-icon-color) !important;\n`;\n\nexport const PlusIconDarkBig = styled(AddIcon)`\n  display: block;\n  width: 20px;\n  height: 20px;\n  color: var(--shared-plus-icon-dark-big) !important;\n`;\n\nexport const PlusIconDarkSmall = styled(AddIcon)`\n  display: block;\n  width: 14px;\n  height: 14px;\n  color: var(--shared-plus-icon-dark-small) !important;\n`;\n\nexport const StyledColoredPlusButtonBig = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background-color: var(--primary-button-color);\n\n  &:hover {\n    background-color: var(--secondary-button-color);\n  }\n`;\n\nexport const StyledColoredPlusButtonSmall = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 3px;\n  background-color: var(--primary-button-color);\n\n  &:hover {\n    background-color: var(--secondary-button-color);\n  }\n`;\n\nexport const StyledWhitePlusButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 3px;\n  background-color: var(--shared-add-column-button);\n  border: 1px solid var(--shared-add-column-button-border);\n`;\n\nexport const StyledBlackPlusButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 3px;\n  background-color: var(--shared-black-plus-button);\n`;\n","import {\n  StyledColoredPlusButtonBig,\n  StyledColoredPlusButtonSmall,\n  StyledWhitePlusButton,\n  StyledBlackPlusButton,\n  PlusIcon,\n  PlusIconDarkBig,\n  PlusIconDarkSmall,\n} from './PlusButton.styled';\n\n//Button+ which changes color depends on choosen theme (for desktop, tablet)\n//Загальна кнопка \"+\", що змінює колір в залежності від обраної теми (для десктопу, планшету)\nexport const ColoredPlusButtonBig = () => {\n  return (\n    <StyledColoredPlusButtonBig>\n      <PlusIconDarkBig />\n    </StyledColoredPlusButtonBig>\n  );\n};\n\n//Button+ which changes color depends on choosen theme (for mobile)\n//Загальна кнопка \"+\", що змінює колір в залежності від обраної теми (для мобільної  версії)\nexport const ColoredPlusButtonSmall = () => {\n  return (\n    <StyledColoredPlusButtonSmall>\n      <PlusIconDarkSmall />\n    </StyledColoredPlusButtonSmall>\n  );\n};\n\n// Button+ with white background-color, used in \"Add another column button\"\n//Кнопка \"+\" з білим бекграундом, що використовується в \"add another column\"\nexport const WhitePlusButton = () => {\n  return (\n    <StyledWhitePlusButton>\n      <PlusIconDarkSmall />\n    </StyledWhitePlusButton>\n  );\n};\n\n//Button+ with black background-color used in the pop-ups\n//Кнопка \"+\" з чорним бекграундом, що використовується в модальних вікнах\nexport const BlackPlusButton = () => {\n  return (\n    <StyledBlackPlusButton>\n      <PlusIcon />\n    </StyledBlackPlusButton>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const StyledInputField = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 0 18px;\n  border: 1px solid var(--shared-input-border-color);\n  border-radius: 8px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  color: var(--shared-input-text-color);\n  text-transform: capitalize;\n  outline: none;\n  transition: border 250ms ease-in;\n\n  &::placeholder {\n    color: var(--shared-input-placeholder-color);\n    text-transform: capitalize;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    border: 1px solid var(--shared-input-border-hover-color) !important;\n    background-color: transparent !important;\n  }\n`;\n","import { StyledInputField } from './InputField.styled';\n\nexport default function InputField({ text, id, name, type, value, onChange }) {\n  return (\n    <StyledInputField\n      placeholder={text}\n      id={id}\n      name={name}\n      type={type}\n      value={value || ''}\n      onChange={onChange}\n    ></StyledInputField>\n  );\n}\n","import { Box, FormControlLabel, Radio, RadioGroup } from '@mui/material';\n\nconst RadioColored = ({ onRadioChange, currentPriority }) => {\n  const radioButtons = [\n    {\n      value: 'High',\n      radioColor: {\n        static: 'var(--radio-label-green-color)',\n        checked: 'var(--radio-label-checked-background-color)',\n        additional: 'var(--radio-label-checked-background-color)',\n      },\n    },\n    {\n      value: 'Medium',\n      radioColor: {\n        static: 'var(--radio-label-pink-color)',\n        checked: 'var(--radio-label-checked-background-color)',\n      },\n    },\n    {\n      value: 'Low',\n      radioColor: {\n        static: 'var(--radio-label-background-color)',\n        checked: 'var(--radio-label-checked-background-color)',\n      },\n    },\n    {\n      value: 'Without',\n      radioColor: {\n        static: 'var(--radio-label-grey-color)',\n        checked: 'var(--radio-label-checked-background-color)',\n      },\n    },\n  ];\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        width: '140px',\n      }}\n    >\n      <RadioGroup\n        aria-labelledby=\"label-changer\"\n        defaultValue={currentPriority}\n        name=\"radio-buttons-group\"\n        onChange={ev => onRadioChange(ev.target.value)}\n        sx={{ display: 'flex', gap: '8px' }}\n        row\n      >\n        {radioButtons.map(button => {\n          const { value, radioColor } = button;\n          return (\n            <FormControlLabel\n              key={value}\n              value={value}\n              sx={{ margin: '0' }}\n              control={\n                <Radio\n                  sx={{\n                    width: '14px',\n                    height: '14px',\n                    color: 'transparent',\n\n                    backgroundColor: radioColor.static,\n                    '&.Mui-checked': {\n                      color: radioColor.static,\n\n                      backgroundColor: radioColor.checked,\n                    },\n                  }}\n                  disableRipple\n                />\n              }\n            />\n          );\n        })}\n      </RadioGroup>\n    </Box>\n  );\n};\n\nexport default RadioColored;\n","import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\nimport '../../basicStyles/variables.scss';\n\nexport const ErrorTextStyled = styled(ErrorMessage)`\n  position: absolute;\n  margin-top: 2px;\n  font-size: 14px;\n  color: var(--radio-label-pink-color);\n`;\n","import { ErrorTextStyled } from './InputErrorMessage.styled';\n\nconst InputErrorMessage = ({ name, component }) => {\n  return <ErrorTextStyled name={name} component={component} />;\n};\n\nexport default InputErrorMessage;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChevronDown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.5 1.25L6 5.75L10.5 1.25\",\n    stroke: \"#BEDBB0\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronDown);\nexport default __webpack_public_path__ + \"static/media/chevron-down.a7e838341a62d08b5ab623ba41fc51c2.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChevronDownBlue(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.5 1.25L6 5.75L10.5 1.25\",\n    stroke: \"#5255BC\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronDownBlue);\nexport default __webpack_public_path__ + \"static/media/chevron-down-blue.eb5cf8ea97b6f9092b7edaa5d0bc9e28.svg\";\nexport { ForwardRef as ReactComponent };","import { Field } from 'formik';\nimport Svg from '../../images/chevron-down.svg';\nimport SvgBlue from '../../images/chevron-down-blue.svg';\nimport styled from '@emotion/styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport '../../shared/basicStyles/variables.scss';\n\nexport const TextareaStyled = styled(Field)`\n  width: 100%;\n  height: 154px;\n  margin-top: 18px;\n  padding: 14px 18px;\n  resize: none;\n  transition: border 250ms ease-in;\n  letter-spacing: -0.28px;\n  color: var(--modal-board-text);\n  border: 1px solid var(--textarea-border-color);\n  border-radius: 8px;\n  background-color: transparent;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.3;\n\n  ::placeholder {\n    letter-spacing: -0.28px;\n    color: var(--modal-board-text);\n    font-family: 'Poppins', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  &:hover,\n  :focus,\n  :active {\n    outline: none;\n    border: 1px solid var(--primary-modal-card-color);\n  }\n`;\n\nexport const SubtitleStyled = styled.p`\n  margin: 24px 0 4px 0;\n  letter-spacing: -0.24px;\n  color: var(--datepicker-dayname-color);\n  font-family: 'Poppins', sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.5;\n`;\n\nexport const LabelStyled = styled.label`\n  display: block;\n  margin: 14px 0 4px 0;\n  letter-spacing: -0.24px;\n  color: var(--datepicker-dayname-color);\n  font-family: 'Poppins', sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.5;\n`;\n\nexport const DatePickerWrapper = styled.div`\n  & .react-datepicker__input-container {\n    width: 100%;\n  }\n  & .react-datepicker__input-container input {\n    position: relative;\n    width: 100%;\n    padding: 0;\n    cursor: pointer;\n    letter-spacing: -0.28px;\n    color: var(--primary-modal-card-color);\n    border: none;\n    outline: none;\n    background-image: ${props =>\n      props.violet ? `url(${SvgBlue})` : `url(${Svg})`};\n    background-color: transparent;\n    background-repeat: no-repeat;\n    background-position: top 6px right 65px;\n    font-family: 'Poppins', sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.5;\n  }\n  & .react-datepicker__triangle {\n    display: none;\n  }\n  & .react-datepicker {\n    border: 1px solid var(--primary-modal-card-color);\n    border-radius: 6px;\n    background-color: var(--datepicker-background-color);\n    font-family: 'Poppins', sans-serif;\n  }\n  & .react-datepicker__header {\n    background-color: var(--datepicker-background-color);\n  }\n  & .react-datepicker__current-month {\n    letter-spacing: -0.32px;\n    color: var(--datepicker-current-month);\n    font-family: 'Poppins', sans-serif;\n    font-size: 16px;\n    line-height: 1.5;\n  }\n  & .react-datepicker__navigation-icon--next {\n    background-color: var(--primary-modal-card-color);\n  }\n  & .react-datepicker__day-name {\n    color: var(--datepicker-dayname-color);\n    font-family: 'Poppins', sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n  }\n  & .react-datepicker__day {\n    transition: background-color 250ms ease-in, color 250ms ease-in;\n    color: var(--datepicker-current-day);\n    border-radius: 50%;\n    background-color: transparent;\n    font-family: 'Poppins', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n  }\n  & .react-datepicker__day--selected {\n    color: var(--datepicker-background-color);\n    background-color: var(--primary-modal-card-color);\n    border-radius: 50%;\n  }\n  & .react-datepicker__day--disabled {\n    color: var(--datepicker-disabled-day);\n  }\n  & .react-datepicker__day:hover {\n    color: var(--datepicker-background-color);\n    background-color: var(--datepicker-hover-background-color);\n  }\n  & .react-datepicker__day--disabled:hover {\n    color: var(--datepicker-hover-disabled-day);\n    background-color: transparent;\n  }\n`;\n\nexport const SpanStyled = styled.span`\n  letter-spacing: -0.28px;\n  color: var(--primary-modal-card-color);\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale } from 'react-datepicker';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport uk from 'date-fns/locale/uk';\n\nimport Modal from 'components/Modal/Modal';\nimport ModalTitle from 'components/ModalTitle/ModalTitle';\nimport ButtonMain from 'shared/components/button/Button';\nimport { BlackPlusButton } from 'shared/components/plusButton/PlusButtons';\nimport InputField from 'shared/components/inputField/InputField';\nimport RadioColored from 'shared/components/radioButtons/RadioColored';\nimport InputErrorMessage from 'shared/components/inputErrorMessage/InputErrorMessage';\nimport { addCard, editCard } from 'redux/task/taskOperations';\nimport { getTheme } from 'redux/auth/authSelectors';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  TextareaStyled,\n  SubtitleStyled,\n  LabelStyled,\n  DatePickerWrapper,\n  SpanStyled,\n} from './ModalCard.styled';\n\nconst TitleSchema = Yup.object().shape({\n  cardTitle: Yup.string().required('Title is required'),\n  cardDescr: Yup.string(),\n});\n\nconst ModalCard = ({\n  onClose,\n  title: modalTitle,\n  btnName,\n  cardTitle = '',\n  cardDescription,\n  currentPriority = 'Without',\n  deadline = false,\n  column,\n  taskId,\n}) => {\n  registerLocale('en', uk);\n\n  const dispatch = useDispatch();\n  const theme = useSelector(getTheme);\n\n  const [startDate, setStartDate] = useState(\n    deadline ? new Date(deadline) : new Date()\n  );\n  const [priority, setPriority] = useState(currentPriority);\n\n  const compareDate = () => {\n    const curDate = startDate.toISOString().split('T')[0];\n    const dateNow = Date.now();\n    const date = new Date(dateNow).toISOString().split('T')[0];\n    return curDate === date ? true : false;\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <ModalTitle>{modalTitle}</ModalTitle>\n\n      <Formik\n        initialValues={{\n          cardTitle: cardTitle,\n          cardDescr: cardDescription,\n        }}\n        validationSchema={TitleSchema}\n        onSubmit={(values, { resetForm }) => {\n          const { cardTitle: title, cardDescr: description } = values;\n          const form = {\n            title,\n            description,\n            priority,\n            deadline: startDate,\n            column,\n          };\n\n          if (taskId) {\n            dispatch(\n              editCard({\n                id: taskId,\n                body: {\n                  title,\n                  description,\n                  priority,\n                  deadline: startDate,\n                },\n                column: column,\n              })\n            );\n          } else {\n            dispatch(addCard(form));\n          }\n\n          resetForm();\n          onClose();\n        }}\n      >\n        {({ handleChange, values }) => (\n          <Form>\n            <label htmlFor=\"cardTitle\"></label>\n            <InputField\n              text=\"Title\"\n              id=\"cardTitle\"\n              name=\"cardTitle\"\n              type=\"text\"\n              onChange={handleChange}\n              value={values.cardTitle}\n            />\n            <InputErrorMessage name=\"cardTitle\" component={'p'} />\n            <label htmlFor=\"cardDescr\"></label>\n            <TextareaStyled\n              as=\"textarea\"\n              placeholder=\"Description\"\n              id=\"cardDescr\"\n              name=\"cardDescr\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n            <SubtitleStyled>Label color</SubtitleStyled>\n            <RadioColored\n              onRadioChange={setPriority}\n              currentPriority={currentPriority}\n            />\n            <LabelStyled htmlFor=\"date\">Deadline</LabelStyled>\n            <DatePickerWrapper violet={theme === 'violet' ? true : false}>\n              {compareDate() && <SpanStyled>Today,&nbsp;</SpanStyled>}\n              <DatePicker\n                locale=\"en\"\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n                minDate={new Date()}\n                name=\"date\"\n                value={date => date}\n                dateFormat=\"MMMM d\"\n              />\n            </DatePickerWrapper>\n            <ButtonMain type=\"submit\">\n              <BlackPlusButton />\n              {btnName}\n            </ButtonMain>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nexport default ModalCard;\n","import styled from '@emotion/styled';\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  top: 70px;\n  right: 30px;\n  background-color: var(--modal-progress-background-color);\n  box-shadow: 0px 4px 16px 0px var(--modal-progress-boxshadow-color);\n  width: 136px;\n  padding: 10px 10px 15px 20px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  transform: translate(10%, -30%);\n\n  max-height: 80px;\n\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  &::-webkit-scrollbar {\n    padding-left: 4px;\n    width: 2px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--secondary-heading-color);\n    border-radius: 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const RadioWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n\n  &:hover > p,\n  &:hover > svg {\n    color: var(--modal-progress-text-hover-color);\n    stroke: var(--modal-progress-icon--hover-stroke-color);\n  }\n\n  cursor: pointer;\n`;\n\nexport const StyledInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  width: 0;\n  height: 0;\n`;\n\nexport const ColumnTitle = styled.p`\n  font-family: Poppins;\n  letter-spacing: -0.28px;\n  color: var(--modal-progress-text-color);\n  transition: all 250ms ease-in-out;\n`;\n\nexport const Icon = styled.svg`\n  stroke: var(--modal-progress-icon-stroke-color);\n  fill: transparent;\n  transition: all 250ms ease-in-out;\n`;\n","import EllipsisText from 'react-ellipsis-text';\nimport PropTypes from 'prop-types';\nimport {\n  ColumnTitle,\n  Icon,\n  RadioWrapper,\n  StyledInput,\n  StyledLabel,\n} from './RadioTooltip.styled';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getColumn } from 'redux/task/taskSelectors';\nimport { replaceCard } from 'redux/task/taskOperations';\nlet view = false;\n\nconst RadioTooltip = ({ onClick, id }) => {\n  const [_id, columnID] = id;\n  const radioColumns = useSelector(getColumn)\n    .map(el => ({\n      _id: el._id,\n      title: el.title,\n    }))\n    .filter(col => col._id !== columnID);\n  const dispatch = useDispatch();\n\n  if (radioColumns.length > 0) view = true;\n\n  const onInputChange = ev => {\n    view && dispatch(replaceCard([_id, ev.target.value, columnID]));\n    onClick();\n  };\n\n  return (\n    <RadioWrapper>\n      {radioColumns.map(column => {\n        const { title, _id } = column;\n        return (\n          <StyledLabel key={_id}>\n            <StyledInput\n              type=\"radio\"\n              value={_id}\n              name=\"tooltip\"\n              onClick={onInputChange}\n            />\n            <ColumnTitle>\n              <EllipsisText text={title} length={'12'} />\n            </ColumnTitle>\n            <Icon width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-goto`}></use>\n            </Icon>\n          </StyledLabel>\n        );\n      })}\n    </RadioWrapper>\n  );\n};\n\nexport default RadioTooltip;\n\nEllipsisText.propTypes = {\n  text: PropTypes.string.isRequired,\n  length: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { ModalWrapper } from './ModalProgress.styled';\nimport { useRef } from 'react';\nimport RadioTooltip from 'shared/components/radioButtons/RadioTooltip';\n\nconst ModalProgress = ({ onCloseProgress, id }) => {\n  const modalRef = useRef();\n\n  function onCloseEscape(e) {\n    if (e.key === 'Escape') {\n      e.stopPropagation();\n      onCloseProgress();\n    }\n  }\n  useEffect(() => {\n    window.addEventListener('keydown', onCloseEscape);\n    return () => {\n      window.removeEventListener('keydown', onCloseEscape);\n    };\n  });\n\n  return (\n    <ModalWrapper ref={modalRef}>\n      <RadioTooltip onClick={onCloseProgress} id={id} />\n    </ModalWrapper>\n  );\n};\n\nexport default ModalProgress;\n","import styled from '@emotion/styled';\nimport '../../basicStyles/variables.scss';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ButtonStyled = styled.button`\n  gap: 8px;\n  width: 150px;\n  height: 49px;\n  margin-top: 24px;\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--primary-button-color);\n  color: var(--shared-button-text-color);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  text-transform: none !important;\n\n  &:hover,\n  :focus {\n    background-color: var(--secondary-button-color);\n  }\n`;\n","import Modal from 'components/Modal/Modal';\nimport ModalTitle from 'components/ModalTitle/ModalTitle';\nimport { Wrapper, ButtonStyled } from './ModalConfirm.styled';\n\nconst ModalConfirm = ({ onConfirm, onClose, title = 'Are you sure?' }) => {\n  const handleConfirm = () => {\n    onConfirm();\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <ModalTitle>{title}</ModalTitle>\n      <Wrapper>\n        <ButtonStyled type=\"button\" onClick={handleConfirm}>\n          Yes\n        </ButtonStyled>\n        <ButtonStyled type=\"button\" onClick={handleClose}>\n          No\n        </ButtonStyled>\n      </Wrapper>\n    </Modal>\n  );\n};\n\nexport default ModalConfirm;\n","import styled from '@emotion/styled';\n\nexport const CardWrapper = styled.div`\n  &:not(:first-of-type) {\n    margin-top: 10px;\n  }\n  position: relative;\n  width: 334px;\n  height: 130px;\n  margin-right: 5px;\n  padding: 15px 15px 5px 15px;\n  border-radius: 8px;\n  background-color: var(--primary-card-background-color);\n  border-left: 4px solid\n    ${props => {\n      if (props.priority === 'Low') return '#8fa1d0';\n      if (props.priority === 'Medium') return '#E09CB5';\n      if (props.priority === 'High') return '#BEDBB0';\n      return '#5b5b5b';\n    }};\n`;\n\nexport const PriorityWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 12px;\n`;\n\nexport const CardFooter = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Title = styled.h4`\n  margin-bottom: 10px;\n  color: var(--primary-heading-color);\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nexport const SubTitle = styled.p`\n  max-width: 290px;\n  height: 35px;\n  color: var(--primary-text-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.5;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const PrioryTitle = styled.p`\n  margin: 0;\n  color: var(----secondary-deadline-color);\n  font-size: 8px;\n  font-weight: 400;\n`;\n\nexport const PriorySubTitle = styled.h5`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  margin: 0;\n  color: var(--primary-heading-color);\n  font-size: 10px;\n  font-weight: 400;\n`;\n\nexport const DeadlineSubTitle = styled.h5`\n  margin: 0;\n  color: var(--primary-heading-color);\n  font-weight: 400;\n  font-size: 10px;\n`;\n\nexport const DeadlineTitle = styled.p`\n  margin-bottom: 10px;\n  color: var(--secondary-deadline-color);\n  font-weight: 400;\n  font-size: 8px;\n`;\n\nexport const Ball = styled.hr`\n  width: 12px;\n  height: 12px;\n  margin: 10px 0;\n  border: none;\n  border-radius: 50%;\n  background-color: #8fa1d0;\n  background-color: var(--primary-priority-color);\n  background-color: ${props => {\n    if (props.priority === 'Low') return '#8fa1d0';\n    if (props.priority === 'Medium') return '#E09CB5';\n    if (props.priority === 'High') return '#BEDBB0';\n    return '#535353';\n  }};\n`;\n\nexport const Line = styled.hr`\n  margin: 5px 0;\n  border: 1px solid #232323;\n  border: 1px solid var(--secondary-line-color);\n`;\n\nexport const Icon = styled.svg`\n  cursor: pointer;\n  transition: box-shadow 0.3s;\n  stroke: var(--tertiary-priority-color);\n  fill: none;\n  &:hover,\n  &:focus {\n    stroke: var(--primary-button-color);\n    filter: drop-shadow(0 0 5px var(--primary-button-color));\n  }\n`;\n\nexport const Bell = styled.svg`\n  cursor: pointer;\n  transition: box-shadow 0.3s;\n  stroke: var(--primary-button-color);\n  fill: none;\n  filter: drop-shadow(0 0 5px var(--primary-button-color));\n  &:hover,\n  &:focus {\n    stroke: #b2fc8d;\n    filter: drop-shadow(0 0 5px var #b2fc8d);\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  right: ${props => (props.isEqualDate ? '5px' : '5px')};\n  top: 10px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EllipsisText from 'react-ellipsis-text';\nimport PropTypes from 'prop-types';\n\nimport ModalCard from 'components/ModalCard/ModalCard';\nimport ModalProgress from 'components/ModalProgress/ModalProgress';\nimport ModalConfirm from 'shared/components/modalConfirm/ModalConfirm';\nimport { deleteCard } from 'redux/task/taskOperations';\nimport { getColumn } from 'redux/task/taskSelectors';\nimport sprite from '../../images/sprite.svg';\nimport {\n  Title,\n  CardWrapper,\n  SubTitle,\n  PrioryTitle,\n  PriorySubTitle,\n  PriorityWrapper,\n  Ball,\n  DeadlineSubTitle,\n  DeadlineTitle,\n  Line,\n  Icon,\n  IconWrapper,\n  Bell,\n} from './Card.styled';\n\nconst Card = ({ task = {}, columnID }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(getColumn);\n\n  const [showModal, setShowModal] = useState(false);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  const {\n    title = ' ',\n    description = ' ',\n    priority = 'Without',\n    deadline = '1/1/2023',\n    _id = '',\n  } = task;\n\n  const today = new Date();\n  const formattedDate = formatDate(today); // Output: \"07/28/23\" (if today is July 28, 2023)\n  const deadlineDate = formatDate(new Date(deadline.split('T')[0]));\n\n  const handleDelete = () => {\n    dispatch(deleteCard({ _id, columnID }));\n    setShowConfirm(false);\n  };\n\n  const handleOpen = () => {\n    setShowConfirm(true);\n  };\n\n  const handleClose = () => {\n    setShowConfirm(false);\n  };\n\n  const onOpen = () => {\n    setShowModal(true);\n  };\n  const onClose = () => {\n    setShowModal(false);\n  };\n\n  const onOpenProgress = () => {\n    setShowProgressModal(true);\n  };\n  const onCloseProgress = () => {\n    setShowProgressModal(false);\n  };\n  const onCloseProgressOut = e => {\n    e.stopPropagation();\n    if (showProgressModal) {\n      setShowProgressModal(false);\n    }\n  };\n\n  function formatDate(date) {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${day}/${month}/${year}`;\n  }\n\n  return (\n    <CardWrapper priority={priority}>\n      <div onClick={onCloseProgressOut}>\n        <Title>\n          <EllipsisText text={title} length={'35'} />\n        </Title>\n        <SubTitle>{description}</SubTitle>\n\n        <Line />\n        <PriorityWrapper>\n          <div>\n            <PrioryTitle>Priority</PrioryTitle>\n            <PriorySubTitle>\n              <Ball priority={priority} />\n              {priority}\n            </PriorySubTitle>\n          </div>\n          <div>\n            <DeadlineTitle>Deadline</DeadlineTitle>\n            <DeadlineSubTitle>{deadlineDate}</DeadlineSubTitle>\n          </div>\n          <IconWrapper isEqualDate={deadlineDate === formattedDate}>\n            {deadlineDate === formattedDate && (\n              <Bell width=\"16px\" height=\"16px\">\n                <use xlinkHref={`${sprite}#icon-bell`} />\n              </Bell>\n            )}\n\n            {columns.length > 1 && (\n              <Icon width=\"16px\" height=\"16px\" onClick={onOpenProgress}>\n                <use xlinkHref={`${sprite}#icon-goto`} />\n              </Icon>\n            )}\n            <Icon width=\"16px\" height=\"16px\" onClick={onOpen}>\n              <use xlinkHref={`${sprite}#icon-pencil`} />\n            </Icon>\n            {showModal && (\n              <ModalCard\n                onClose={onClose}\n                title=\"Edit card\"\n                btnName=\"Edit\"\n                cardTitle={title}\n                cardDescription={description}\n                currentPriority={priority}\n                deadline={deadline}\n                column={columnID}\n                taskId={_id}\n              />\n            )}\n            <Icon width=\"16px\" height=\"16px\" onClick={handleOpen}>\n              <use xlinkHref={`${sprite}#icon-trash`} />\n            </Icon>\n          </IconWrapper>\n        </PriorityWrapper>\n        {showConfirm && (\n          <ModalConfirm onClose={handleClose} onConfirm={handleDelete} />\n        )}\n      </div>\n      {showProgressModal && (\n        <ModalProgress onCloseProgress={onCloseProgress} id={[_id, columnID]} />\n      )}\n    </CardWrapper>\n  );\n};\n\nexport default Card;\n\nEllipsisText.propTypes = {\n  text: PropTypes.string.isRequired,\n  length: PropTypes.string.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nimport Modal from 'components/Modal/Modal';\nimport ModalTitle from 'components/ModalTitle/ModalTitle';\nimport ButtonMain from 'shared/components/button/Button';\nimport { BlackPlusButton } from 'shared/components/plusButton/PlusButtons';\nimport InputField from 'shared/components/inputField/InputField';\nimport InputErrorMessage from 'shared/components/inputErrorMessage/InputErrorMessage';\nimport { addColumn, editColumn } from 'redux/task/taskOperations';\nimport { getBoardId, getColumn } from 'redux/task/taskSelectors';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst TitleSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst ModalColumn = ({ onClose, title, btnName, columnTitle = '', column }) => {\n  const dispatch = useDispatch();\n\n  const board = useSelector(getBoardId);\n  const columns = useSelector(getColumn);\n\n  return (\n    <Modal onClose={onClose}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n\n      <ModalTitle>{title}</ModalTitle>\n\n      <Formik\n        initialValues={{\n          title: columnTitle,\n        }}\n        validationSchema={TitleSchema}\n        onSubmit={(values, { resetForm }) => {\n          const columnForEdit = columns.filter(el => el._id !== column);\n          if (\n            columnForEdit.some(\n              el => el.title.toLowerCase() === values.title.toLowerCase()\n            )\n          ) {\n            return toast.warn('This title already exists!');\n          }\n\n          if (columnTitle) {\n            dispatch(editColumn({ body: { ...values, board }, id: column }));\n          } else {\n            dispatch(addColumn({ ...values, board }));\n          }\n          resetForm();\n          onClose();\n        }}\n      >\n        {({ handleChange, values }) => (\n          <Form>\n            <label htmlFor=\"columnTitle\"></label>\n            <InputField\n              as={Field}\n              text=\"Title\"\n              id=\"columnTitle\"\n              name=\"title\"\n              type=\"text\"\n              onChange={handleChange('title')}\n              value={values.title || ''}\n            />\n            <InputErrorMessage name=\"title\" component={'p'} />\n            <ButtonMain>\n              <BlackPlusButton />\n              {btnName}\n            </ButtonMain>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nexport default ModalColumn;\n","import styled from '@emotion/styled';\n\nexport const LabelStyled = styled.p`\n  position: absolute;\n  top: 90px;\n  right: 24px;\n  background-color: transparent;\n  border: none;\n  color: var(--radio-button-text-color);\n  font-family: 'Poppins', sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.5;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n`;\n","import { Box, FormControlLabel, Radio, RadioGroup } from '@mui/material';\nimport { LabelStyled } from './RadioFilters.styled';\n\nconst RadioFilters = ({ onFilterChange, onModalClose, onClick }) => {\n  const radioButtons = [\n    {\n      value: 'Without',\n      label: 'Without priority',\n      labelColor: 'var(--datepicker-dayname-color)',\n      radioColor: {\n        static: 'var(--radio-label-grey-color)',\n        onChecked: 'var(--radio-label-checked-background-color)',\n      },\n    },\n    {\n      value: 'Low',\n      label: 'Low',\n      labelColor: 'var(--radio-label-background-color)',\n      radioColor: {\n        static: 'var(--radio-label-background-color)',\n        onChecked: 'var(--radio-label-checked-background-color)',\n      },\n    },\n    {\n      value: 'Medium',\n      label: 'Medium',\n      labelColor: 'var(--radio-label-pink-color)',\n      radioColor: {\n        static: 'var(--radio-label-pink-color)',\n        onChecked: 'var(--radio-label-checked-background-color)',\n      },\n    },\n    {\n      value: 'High',\n      label: 'High',\n      labelColor: 'var(--radio-label-green-color)',\n      radioColor: {\n        static: 'var(--radio-label-green-color)',\n        onChecked: 'var(--radio-label-checked-background-color)',\n      },\n    },\n  ];\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        width: '120px',\n      }}\n    >\n      <RadioGroup\n        aria-labelledby=\"label-changer\"\n        defaultValue=\"all\"\n        name=\"radio-buttons-group\"\n        onChange={ev => {\n          onFilterChange(ev.target.value);\n          setTimeout(() => {\n            onModalClose();\n          }, 150);\n        }}\n        sx={{ display: 'flex', flexDirection: 'row', gap: '8px' }}\n      >\n        <FormControlLabel\n          value=\"\"\n          control={<Radio sx={{ display: 'none' }} />}\n          label={<LabelStyled>Show all</LabelStyled>}\n          onClick={onClick}\n        />\n        {radioButtons.map(button => {\n          const { value, label, labelColor, radioColor } = button;\n          return (\n            <FormControlLabel\n              key={value}\n              value={value}\n              sx={{\n                display: 'flex',\n                gap: '8px',\n                margin: '0',\n                height: '24px',\n                '& .MuiTypography-root': {\n                  fontFamily: 'Poppins',\n                  fontSize: '12px',\n                  letterSpacing: '-0.24px',\n                  color: labelColor,\n                },\n              }}\n              control={\n                <Radio\n                  onClick={onClick}\n                  sx={{\n                    width: '14px',\n                    height: '14px',\n                    color: 'transparent',\n                    backgroundColor: radioColor.static,\n                    '&.Mui-checked': {\n                      color: radioColor.static,\n                      backgroundColor: radioColor.onChecked,\n                    },\n                  }}\n                  disableRipple\n                />\n              }\n              label={label}\n            />\n          );\n        })}\n      </RadioGroup>\n    </Box>\n  );\n};\n\nexport default RadioFilters;\n","import styled from '@emotion/styled';\nimport '../../shared/basicStyles/variables.scss';\n\nexport const FormStyled = styled.form`\n  padding-top: 14px;\n  border-top: 1px solid var(--modal-filter-form-line);\n`;\n\nexport const BoxStyled = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const SubtitleStyled = styled.p`\n  letter-spacing: -0.28px;\n  color: var(--modal-filters-text);\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n","import RadioFilters from 'shared/components/radioButtons/RadioFilters';\nimport Modal from 'components/Modal/Modal';\nimport ModalTitle from 'components/ModalTitle/ModalTitle';\nimport { FormStyled, BoxStyled, SubtitleStyled } from './ModalFilters.styled';\n\nconst ModalFilters = ({ onClose, onClick }) => {\n  let priority = '';\n  return (\n    <Modal onClose={onClose}>\n      <ModalTitle>Filters</ModalTitle>\n      <FormStyled>\n        <BoxStyled>\n          <SubtitleStyled>Label color</SubtitleStyled>\n        </BoxStyled>\n        <RadioFilters\n          onFilterChange={() => priority}\n          onModalClose={onClose}\n          onClick={onClick}\n        />\n      </FormStyled>\n    </Modal>\n  );\n};\n\nexport default ModalFilters;\n","import styled from '@emotion/styled';\n\nexport const BoardItem = styled.li`\n  position: relative;\n  display: flex;\n  overflow-y: auto;\n  align-items: center;\n  justify-content: space-between;\n  width: 335px;\n  max-height: 500px;\n  margin-bottom: 10px;\n  padding: 18px 20px 17px;\n  cursor: pointer;\n  text-align: left;\n  letter-spacing: -0.02em;\n  color: var(--column-text-color);\n  border-radius: 8px;\n  background-color: var(--column-background-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(24 / 14);\n`;\n\nexport const ProgName = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconProgect = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--sidebar-icon-stroke-color);\n`;\n\nexport const IconEditCustom = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const IconEdit = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 8px;\n  stroke: var(--column-icon-edit-stroke-color);\n  fill: none;\n  &:hover {\n    stroke: var(--plus-button-color);\n    filter: drop-shadow(0 0 7px var(--plus-button-color));\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EllipsisText from 'react-ellipsis-text';\nimport PropTypes from 'prop-types';\n\nimport ModalColumn from 'components/ModalColumn/ModalColumn';\nimport ModalConfirm from 'shared/components/modalConfirm/ModalConfirm';\nimport { deleteColumn } from 'redux/task/taskOperations';\nimport { getColumn } from 'redux/task/taskSelectors';\nimport icons from '../../images/sprite.svg';\nimport { BoardItem, IconEdit, IconEditCustom, ProgName } from './Column.styled';\n\nconst Column = ({ title, columnId }) => {\n  const dispatch = useDispatch();\n\n  const [showModal, setShowModal] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  const getColumns = useSelector(getColumn);\n  const tasksInColumn = getColumns.filter(el => el._id === columnId);\n\n  const handleOpen = () => {\n    setShowConfirm(true);\n  };\n\n  const handleClose = () => {\n    setShowConfirm(false);\n  };\n\n  const onOpen = () => {\n    setShowModal(true);\n  };\n  const onClose = () => {\n    setShowModal(false);\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteColumn(columnId));\n    setShowConfirm(false);\n  };\n\n  return (\n    <BoardItem>\n      <ProgName>\n        <div>\n          <EllipsisText text={title} length={'30'} />\n        </div>\n      </ProgName>\n      <IconEditCustom>\n        <IconEdit onClick={onOpen}>\n          <use href={`${icons}#icon-pencil`}></use>\n        </IconEdit>\n        <IconEdit onClick={handleOpen}>\n          <use href={`${icons}#icon-trash`}></use>\n        </IconEdit>\n      </IconEditCustom>\n      {showModal && (\n        <ModalColumn\n          onClose={onClose}\n          title=\"Edit column\"\n          btnName=\"Edit\"\n          columnTitle={title}\n          column={columnId}\n        />\n      )}\n      {showConfirm && (\n        <ModalConfirm\n          onClose={handleClose}\n          onConfirm={handleDelete}\n          title={\n            tasksInColumn[0]?.tasks?.length\n              ? 'There are tasks inside the column. Are you sure to delete this column?'\n              : 'Are you sure?'\n          }\n        />\n      )}\n    </BoardItem>\n  );\n};\n\nexport default Column;\n\nEllipsisText.propTypes = {\n  text: PropTypes.string.isRequired,\n  length: PropTypes.string.isRequired,\n};\n","import {\n  Container,\n  ScreensHeader,\n  HeaderTxt,\n  HeaderFiltres,\n  IconFiltre,\n  AddColumn,\n  IconPlus,\n  ButtonAdd,\n  ColumnsContainer,\n  TutorialTitle,\n  TutorialContainer,\n  TutorialSelected,\n  HeaderAddColumn,\n  IconPlusFilters,\n  ColumnWrapper,\n  HeadersWrapper,\n} from './ScreensPageStyled';\nimport icons from '../../images/sprite.svg';\nimport { useEffect, useState } from 'react';\nimport Card from 'components/Card/Card';\nimport ModalColumn from 'components/ModalColumn/ModalColumn';\nimport ModalFilters from 'components/ModalFilters/ModalFilters';\nimport ButtonMain from 'shared/components/button/Button';\nimport { BlackPlusButton } from 'shared/components/plusButton/PlusButtons';\nimport ModalCard from 'components/ModalCard/ModalCard';\nimport { useSelector } from 'react-redux';\nimport { getBoardBg, getBoardName, getColumn } from 'redux/task/taskSelectors';\nimport Column from 'components/Column/Column';\nimport { getBoard } from 'redux/auth/authSelectors';\nimport EllipsisText from 'react-ellipsis-text/lib/components/EllipsisText';\n\nconst ScreensPage = ({ title }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [showModalAddCard, setShowModalAddCard] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n  const [priorityFilter, setPriorityFilter] = useState('');\n\n  const [colId, setColId] = useState('');\n  const boardBg = useSelector(getBoardBg);\n  const boards = useSelector(getBoard);\n  const columns = useSelector(getColumn);\n\n  const isBoardActive = boards.find(board => board.isActive);\n\n  const [headerSize, setHeaderSize] = useState(true);\n\n  const handleWindowResize = () => {\n    if (window.innerWidth > 375) {\n      setHeaderSize(true);\n    } else {\n      setHeaderSize(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n  const boardName = useSelector(getBoardName);\n  const column = useSelector(getColumn)?.toSorted((a, b) =>\n    b.updatedAt.localeCompare(a.updatedAt)\n  );\n\n  const isView = false;\n\n  const onFilter = e => {\n    setPriorityFilter(e.target.value);\n  };\n\n  const onOpen = () => {\n    setShowModal(true);\n  };\n  const onClose = () => {\n    setShowModal(false);\n  };\n\n  const onOpenAddCard = e => {\n    setColId(e);\n    setShowModalAddCard(true);\n  };\n  const onCloseAddCard = () => {\n    setShowModalAddCard(false);\n  };\n\n  const onOpenFilters = () => {\n    setShowFilters(true);\n  };\n  const onCloseFilters = () => {\n    setShowFilters(false);\n  };\n\n  return boards.length ? (\n    <Container picture={boardBg} isBoardActive>\n      <ScreensHeader>\n        {isBoardActive && (\n          <HeaderTxt>\n            {headerSize ? (\n              boardName ?? ''\n            ) : (\n              <EllipsisText text={boardName ?? ''} length={15} />\n            )}\n          </HeaderTxt>\n        )}\n\n        <HeadersWrapper>\n          {isBoardActive && columns.length !== 0 && (\n            <HeaderAddColumn onClick={() => setShowModal(true)}>\n              <IconPlusFilters>\n                <use href={`${icons}#icon-plus`}></use>\n              </IconPlusFilters>\n              <div>Add column</div>\n            </HeaderAddColumn>\n          )}\n          {isBoardActive && (\n            <HeaderFiltres onClick={onOpenFilters}>\n              <IconFiltre>\n                <use href={`${icons}#icon-filter`}></use>\n              </IconFiltre>\n              <div>Filtres</div>\n              {showFilters && (\n                <ModalFilters onClose={onCloseFilters} onClick={onFilter} />\n              )}\n            </HeaderFiltres>\n          )}\n        </HeadersWrapper>\n      </ScreensHeader>\n      {isBoardActive && columns.length === 0 && (\n        <AddColumn>\n          <ButtonAdd type=\"button\" onClick={onOpen}>\n            <IconPlus>\n              <use href={`${icons}#icon-plus`}></use>\n            </IconPlus>\n            {column?.length === 0 ? 'Add column' : 'Add another column'}\n          </ButtonAdd>\n        </AddColumn>\n      )}\n      {isBoardActive && boardName && (\n        <ColumnsContainer>\n          {column?.map(el => (\n            <div key={el._id}>\n              <Column title={el.title} columnId={el._id} />\n              <ColumnWrapper>\n                {el.tasks?.length === 0\n                  ? isView && <Card columnID={el._id} />\n                  : el.tasks\n                      ?.filter(card => card?.priority.includes(priorityFilter))\n                      .toSorted((a, b) =>\n                        b.updatedAt.localeCompare(a.updatedAt)\n                      )\n                      .map(task => (\n                        <Card key={task._id} task={task} columnID={el._id} />\n                      ))}\n              </ColumnWrapper>\n              <ButtonMain\n                type=\"button\"\n                onClick={() => onOpenAddCard(el._id)}\n                value={el._id}\n                name=\"columnId\"\n              >\n                <BlackPlusButton />\n                {el.tasks?.length === 0 ? 'Add card' : 'Add another card'}\n              </ButtonMain>\n            </div>\n          ))}\n        </ColumnsContainer>\n      )}\n      {showModal && (\n        <ModalColumn\n          onClose={onClose}\n          title=\"Add column\"\n          btnName=\"Add\"\n          columnTitle={title}\n        />\n      )}\n      {showModalAddCard && (\n        <ModalCard\n          onClose={onCloseAddCard}\n          title=\"Add card\"\n          btnName=\"Add\"\n          column={colId}\n        />\n      )}\n    </Container>\n  ) : (\n    <TutorialContainer>\n      <TutorialTitle>\n        Before starting your project, it is essential{' '}\n        <TutorialSelected>to create a board</TutorialSelected> to visualize and\n        track all the necessary tasks and milestones. This board serves as a\n        powerful tool to organize the workflow and ensure effective\n        collaboration among team members.\n      </TutorialTitle>\n    </TutorialContainer>\n  );\n};\n\nexport default ScreensPage;\n","import styled from '@emotion/styled';\n\nexport const StyledRadioWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 16px;\n`;\n\nexport const StyledLabel = styled.label`\n  & img {\n    cursor: pointer;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n\n  &:checked + img {\n    transform: scale(1.3);\n    border: 2px solid var(--primary-button-color);\n    border-radius: 10px;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport {\n  StyledInput,\n  StyledLabel,\n  StyledRadioWrapper,\n} from './RadioImages.styled';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nconst RadioImages = ({ onChangeImage, currentBoardBackground }) => {\n  const images = [\n    '00.png',\n    '01.png',\n    '02.png',\n    '03.png',\n    '04.png',\n    '05.png',\n    '06.png',\n    '07.png',\n    '08.png',\n    '09.png',\n    '10.png',\n    '11.png',\n    '12.png',\n    '13.png',\n    '14.png',\n    '15.png',\n  ];\n\n  const [selectedValue, setSelectedValue] = useState(0);\n\n  useEffect(() => {\n    if (!selectedValue) {\n      setSelectedValue(currentBoardBackground || '00');\n    }\n  }, [currentBoardBackground, selectedValue]);\n\n  const handleRadioChange = index => {\n    setSelectedValue(index <= 9 ? `0${index}` : `${index}`);\n    const paddedIndex = index.toString().padStart(2, '0');\n    const backgroundValue = `${paddedIndex}`;\n    onChangeImage(backgroundValue);\n  };\n\n  return (\n    <StyledRadioWrapper>\n      {images.map((image, index) => {\n        const id = nanoid();\n        return (\n          <StyledLabel key={id}>\n            <StyledInput\n              type=\"radio\"\n              value={index}\n              name=\"image\"\n              checked={selectedValue === image.substring(0, 2)}\n              onChange={() => handleRadioChange(index)}\n            />\n            <img\n              src={require(`../../../images/background/${image}`)}\n              alt={`option ${index + 1}`}\n              width=\"28px\"\n              height=\"28px\"\n            />\n          </StyledLabel>\n        );\n      })}\n    </StyledRadioWrapper>\n  );\n};\n\nexport default RadioImages;\n","import styled from '@emotion/styled';\nimport '../../basicStyles/variables.scss';\n\nexport const StyledRadioWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const StyledLabel = styled.label`\n  & svg {\n    cursor: pointer;\n  }\n`;\n\nexport const StyledSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--radio-icons-color);\n  fill: transparent;\n`;\n\nexport const StyledInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n  &:checked + svg {\n    stroke: var(--radio-icons-checked);\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  StyledInput,\n  StyledLabel,\n  StyledRadioWrapper,\n  StyledSVG,\n} from './RadioIcons.styled';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst RadioIcons = ({ onChangeIcon, currentBoardIcon }) => {\n  const icons = [\n    'icon-project',\n    'icon-star',\n    'icon-loading',\n    'icon-puzzle',\n    'icon-container',\n    'icon-lightning',\n    'icon-colors',\n    'icon-hexagon',\n  ];\n\n  const [selectedValue, setSelectedValue] = useState('');\n\n  useEffect(() => {\n    if (!selectedValue) {\n      setSelectedValue(currentBoardIcon || 'icon-project');\n    }\n  }, [currentBoardIcon, selectedValue]);\n\n  const handleRadioChange = icon => {\n    setSelectedValue(icon);\n    onChangeIcon(icon);\n  };\n\n  return (\n    <StyledRadioWrapper>\n      {icons.map(icon => {\n        const id = nanoid();\n        return (\n          <StyledLabel key={id}>\n            <StyledInput\n              type=\"radio\"\n              value={icon}\n              name=\"icon\"\n              checked={selectedValue === icon}\n              onChange={() => handleRadioChange(icon)}\n            />\n            <StyledSVG>\n              <use href={`${sprite}#${icon}`} />\n            </StyledSVG>\n          </StyledLabel>\n        );\n      })}\n    </StyledRadioWrapper>\n  );\n};\n\nexport default RadioIcons;\n","import styled from '@emotion/styled';\nimport '../../shared/basicStyles/variables.scss';\n\nexport const SubtitleStyled = styled.p`\n  margin: 24px 0 14px 0;\n  letter-spacing: -0.28px;\n  color: var(--modal-board-text);\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const Duplicate = styled.p`\n  position: absolute;\n  margin-top: 2px;\n  margin-left: 5px;\n  color: red;\n`;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport Modal from 'components/Modal/Modal';\nimport ModalTitle from 'components/ModalTitle/ModalTitle';\nimport ButtonMain from 'shared/components/button/Button';\nimport { BlackPlusButton } from 'shared/components/plusButton/PlusButtons';\nimport InputField from 'shared/components/inputField/InputField';\nimport RadioImages from 'shared/components/radioButtons/RadioImages';\nimport RadioIcons from 'shared/components/radioButtons/RadioIcons';\nimport InputErrorMessage from 'shared/components/inputErrorMessage/InputErrorMessage';\nimport { getBoardSelector } from 'redux/auth/authSelectors';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SubtitleStyled, Duplicate } from './ModalBoard.styled';\n\nconst TitleSchema = Yup.object().shape({\n  boardTitle: Yup.string().required('Title is required'),\n});\n\nconst ModalBoard = ({\n  onClose,\n  onCreateBoard,\n  onEditBoard,\n  title,\n  btnName,\n  boardName,\n  currentBoard,\n}) => {\n  const [backgroundName, setBackgroundName] = useState('00');\n  const [iconName, setIconName] = useState('icon-project');\n  const [isDuplicate, setIsDuplicate] = useState(false);\n  const boards = useSelector(getBoardSelector);\n\n  let updatedBackground;\n  let updatedIcon;\n  if (btnName === 'Edit') {\n    updatedBackground =\n      backgroundName !== '00' ? backgroundName : currentBoard.background;\n\n    updatedIcon = iconName !== 'icon-project' ? iconName : currentBoard.icon;\n  }\n\n  return (\n    <Modal onClose={onClose}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n      <ModalTitle>{title}</ModalTitle>\n\n      <Formik\n        initialValues={{\n          boardTitle: boardName,\n        }}\n        validationSchema={TitleSchema}\n        onSubmit={(values, { resetForm }) => {\n          if (btnName === 'Create') {\n            if (boards.some(el => el.title === values.boardTitle)) {\n              setIsDuplicate(true);\n              return toast.warn('This title already exists!');\n            }\n            const boardInfo = {\n              values,\n              background: backgroundName,\n              icon: iconName,\n            };\n            onCreateBoard(boardInfo);\n            setIsDuplicate(false);\n          } else if (btnName === 'Edit') {\n            if (\n              boards.some(\n                el => el.title === values.boardTitle && el !== currentBoard\n              )\n            ) {\n              setIsDuplicate(true);\n              return toast.warn('This title already exists!');\n            }\n            const boardInfoEdit = {\n              values,\n              background: updatedBackground,\n              icon: updatedIcon,\n            };\n\n            onEditBoard(boardInfoEdit);\n            setIsDuplicate(false);\n          }\n\n          resetForm();\n          onClose();\n        }}\n      >\n        {({ handleChange, values }) => (\n          <Form>\n            <label htmlFor=\"boardTitle\"></label>\n            <InputField\n              text=\"Title\"\n              id=\"boardTitle\"\n              name=\"boardTitle\"\n              type=\"text\"\n              onChange={handleChange}\n              value={values.boardTitle || ''}\n            />\n            <InputErrorMessage name=\"boardTitle\" component={'p'} />\n            {isDuplicate && <Duplicate>Title is duplicate!</Duplicate>}\n\n            <SubtitleStyled>Icons</SubtitleStyled>\n            <RadioIcons\n              onChangeIcon={setIconName}\n              currentBoardIcon={updatedIcon}\n            />\n            <SubtitleStyled>Background</SubtitleStyled>\n\n            <RadioImages\n              onChangeImage={setBackgroundName}\n              currentBoardBackground={updatedBackground}\n            />\n\n            <ButtonMain type=\"submit\">\n              <BlackPlusButton />\n              {btnName}\n            </ButtonMain>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nexport default ModalBoard;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nasync function fetchHelpApi(data) {\n  try {\n    const response = await axios.post(\n      `https://taskspro-backend.onrender.com/api/help`,\n      { ...data }\n    );\n    toast.success('You message sent to the Customer Service');\n    return response;\n  } catch (e) {\n    toast.error(e.payload);\n    return e.message;\n  }\n}\n\nexport default fetchHelpApi;\n","import { Field } from 'formik';\nimport styled from '@emotion/styled';\n\nexport const TextareaStyled = styled(Field)`\n  width: 100%;\n  height: 120px;\n  margin-top: 18px;\n  padding: 14px 18px;\n  resize: none;\n  transition: border 250ms ease-in;\n  letter-spacing: -0.28px;\n  color: var(--modal-need-help-text);\n  border: 1px solid var(--textarea-border-color);\n  border-radius: 8px;\n  background-color: transparent;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.3;\n\n  ::placeholder {\n    letter-spacing: -0.28px;\n    color: var(--modal-need-help-text);\n    font-family: 'Poppins', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  &:hover,\n  :focus,\n  :active {\n    outline: none;\n    border: 1px solid var(--primary-modal-card-color);\n  }\n`;\n\nexport const InputField = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 0 18px;\n  transition: border 250ms ease-in;\n  text-transform: lowercase;\n  color: var(--shared-input-text-color);\n  border: 1px solid var(--shared-input-border-color);\n  border-radius: 8px;\n  outline: none;\n  background-color: transparent !important;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n\n  &::placeholder {\n    color: var(--shared-input-placeholder-color);\n    text-transform: capitalize;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    border: 1px solid var(--shared-input-border-hover-color) !important;\n    background-color: var(--input-need-help-background-focus) !important;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport Modal from 'components/Modal/Modal';\nimport ModalTitle from 'components/ModalTitle/ModalTitle';\nimport ButtonMain from 'shared/components/button/Button';\nimport InputErrorMessage from 'shared/components/inputErrorMessage/InputErrorMessage';\nimport fetchHelpApi from 'shared/utilities/fetchHelp';\nimport { getUserEmail } from 'redux/auth/authSelectors';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { TextareaStyled, InputField } from './ModalNeedHelp.styled';\n\nconst NeedHelpSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  comment: Yup.string().required('Comment is required'),\n});\n\nconst ModalNeedHelp = ({ onClose }) => {\n  const userEmail = useSelector(getUserEmail).toLowerCase();\n  return (\n    <Modal onClose={onClose} custom={true}>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n      <ModalTitle>Need help</ModalTitle>\n      <Formik\n        initialValues={{\n          email: `${userEmail}`,\n          comment: '',\n        }}\n        validationSchema={NeedHelpSchema}\n        onSubmit={(values, { resetForm }) => {\n          fetchHelpApi(values);\n          resetForm();\n          setTimeout(() => {\n            onClose();\n          }, 3000);\n        }}\n      >\n        {({ handleChange, values }) => (\n          <Form>\n            <label htmlFor=\"email\"></label>\n            <InputField\n              text=\"Email address\"\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={handleChange}\n              value={values.email}\n            />\n            <InputErrorMessage name=\"email\" component={'p'} />\n\n            <label htmlFor=\"comment\"></label>\n            <TextareaStyled\n              as=\"textarea\"\n              id=\"comment\"\n              name=\"comment\"\n              type=\"text\"\n              placeholder=\"Comment\"\n              onChange={handleChange}\n            />\n            <InputErrorMessage name=\"comment\" component={'p'} />\n            <ButtonMain type=\"submit\">Send</ButtonMain>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nexport default ModalNeedHelp;\n","import styled from '@emotion/styled';\nimport { css, keyframes } from '@emotion/react';\n\nexport const SidebarContainer = styled.div`\n  min-width: 260px;\n  background-color: var(--primary-background-sidebar-color);\n  color: var(--secondary-heading-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  transition: transform 0.3s ease-in-out;\n  z-index: 11;\n\n  @media (max-width: 1439px) {\n    position: absolute;\n    height: 100vh;\n    min-width: 225px;\n  }\n`;\n\nexport const Logo = styled.h1`\n  display: flex;\n  align-items: center;\n\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-top: 24px;\n  padding-bottom: 60px;\n\n  font-size: 16px;\n  font-weight: 600;\n  line-height: calc(24 / 16);\n  letter-spacing: -0.04em;\n`;\n\nexport const IconLogo = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n`;\n\nexport const H3Board = styled.h3`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  letter-spacing: -0.02em;\n  color: var(--secondary-text-sidebar-color);\n  opacity: 0.5;\n\n  padding-left: 24px;\n  padding-right: 24px;\n  margin-bottom: 8px;\n`;\n\nexport const CreateBoard = styled.div`\n  display: flex;\n\n  justify-content: space-between;\n  align-items: center;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(21 / 14);\n  letter-spacing: -0.02em;\n\n  margin-left: 24px;\n  margin-right: 24px;\n  padding-bottom: 14px;\n  padding-top: 14px;\n\n  border-top: solid 1px var(--line-border-sidebar-color);\n  border-bottom: solid 1px var(--line-border-sidebar-color);\n`;\n\nexport const IconPlus = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: var(--plus-button-color);\n  stroke: var(--secondary-icon-stroke-color);\n  &:hover {\n    fill: var(--plus-button-hover-color);\n    cursor: pointer;\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const BoardList = styled.ul`\n  margin-top: 40px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  max-height: calc(100vh - 420px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  transform: scaleX(-1);\n\n  &::-webkit-scrollbar {\n    padding-left: 4px;\n    width: 2px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--secondary-heading-color);\n    border-radius: 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n  }\n`;\n\nexport const BoardItem = styled.li`\n  transform: scaleX(-1);\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-height: 60px;\n\n  padding: 20px 24px;\n  cursor: pointer;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(24 / 14);\n  letter-spacing: -0.02em;\n  text-align: left;\n\n  background-color: ${props =>\n    props.isActiveProps\n      ? 'var(--board-item-sidebar-background-color)'\n      : 'transparent'};\n  color: ${props =>\n    props.isActiveProps\n      ? 'var(--sidebar-icon-active-stroke-color)'\n      : 'var(--sidebar-icon-edit-stroke-color)'};\n\n  stroke: ${props =>\n    props.isActiveProps\n      ? 'var(--sidebar-icon-active-stroke-color)'\n      : 'var(--sidebar-icon-edit-stroke-color)'};\n  &:hover {\n    color: var(--sidebar-icon-active-stroke-color);\n    stroke: var(--sidebar-icon-active-stroke-color);\n  }\n`;\n\nexport const BorderRight = styled.div`\n  display: ${props => (props.isActive ? 'block' : 'none')};\n  content: '';\n  position: absolute;\n  top: 0;\n  right: -1px;\n  height: 100%;\n  width: 3px;\n  background-color: var(--scrollbar-color);\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n`;\n\nexport const ProgName = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\nexport const IconProgect = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: var(--sidebar-icon-fill-color);\n  stroke: inherit;\n`;\nexport const IconEditCustom = styled.div`\n  display: flex;\n  text-align: center;\n  align-items: center;\n`;\n\nexport const IconEdit = styled.svg`\n  margin-left: 8px;\n  width: 16px;\n  height: 16px;\n  stroke: var(--sidebar-icon-edit-stroke-color);\n  fill: none;\n  &:hover {\n    stroke: var(--plus-button-color);\n    filter: drop-shadow(0 0 7px var(--plus-button-color));\n  }\n`;\n\nconst fadeInAnimation = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n\n  }\n   50% {\n    opacity: 0.5;\n    transform: translateY(10px);\n\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n\n  }\n`;\n\nexport const HelpBar = styled.div`\n  position: relative;\n`;\n\nexport const HelpTextContainer = styled.div`\n  position: absolute;\n  top: -120px;\n  background-color: var(--sidebar-help-backgound-color);\n  padding: 20px;\n  padding-bottom: 0;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  margin-left: 24px;\n  margin-right: 24px;\n\n  ${({ isHelpBarHovered }) =>\n    isHelpBarHovered\n      ? css`\n          animation: ${fadeInAnimation} 0.2s ease-in-out;\n        `\n      : ''};\n\n  @media (max-width: 1439px) {\n    top: -140px;\n  }\n`;\n\nexport const HelpBtn = styled.div`\n  background-color: var(--sidebar-help-backgound-color);\n  padding-right: 20px;\n  padding-left: 20px;\n  padding-top: 7px;\n  padding-bottom: 7px;\n  border-radius: 8px;\n  margin-left: 24px;\n  margin-right: 24px;\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(20 / 14);\n  letter-spacing: -0.02em;\n\n  border-top-left-radius: ${props => (props.isHovered ? '0' : '8px')};\n  border-top-right-radius: ${props => (props.isHovered ? '0' : '8px')};\n`;\n\nexport const HelpImg = styled.img`\n  width: 34px;\n  margin-left: 20px;\n`;\n\nexport const HelpTxt = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(20 / 14);\n  letter-spacing: -0.02em;\n`;\n\nexport const IconHelp = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: none;\n  stroke: var(--sidebar-icon-stroke-color);\n  margin-right: 8px;\n`;\n\nexport const LogOut = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 24px;\n  cursor: pointer;\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: calc(24 / 16);\n  letter-spacing: 0em;\n\n  &:hover {\n    stroke: var(--logout-hover-button-color);\n    filter: drop-shadow(0 0 1px var(--logout-hover-button-color));\n  }\n`;\n\nexport const IconLogOut = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: var(--logout-button-color);\n  margin-right: 8px;\n`;\n","import { useState, useRef } from 'react';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport ModalNeedHelp from 'components/ModalNeedHelp/ModalNeedHelp';\nimport {\n  SidebarContainer,\n  Logo,\n  BoardList,\n  BoardItem,\n  H3Board,\n  CreateBoard,\n  HelpBar,\n  IconLogo,\n  IconPlus,\n  ProgName,\n  IconProgect,\n  IconEdit,\n  IconEditCustom,\n  BorderRight,\n  HelpImg,\n  HelpTxt,\n  HelpBtn,\n  IconHelp,\n  LogOut,\n  IconLogOut,\n  HelpTextContainer,\n} from './SidebarStyled';\nimport icons from '../../images/sprite.svg';\nimport plant from '../../images/plant_min.png';\nimport { useDispatch } from 'react-redux';\nimport {\n  createBoard,\n  deleteBoard,\n  editBoard,\n  logout,\n  updateBoardActive,\n} from 'redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getBoardSelector } from 'redux/auth/authSelectors';\nimport { getBoardId } from 'redux/task/taskOperations';\nimport ModalConfirm from 'shared/components/modalConfirm/ModalConfirm';\nimport EllipsisText from 'react-ellipsis-text';\nimport { getColumn } from 'redux/task/taskSelectors';\n\nconst Sidebar = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [showHelpText, setShowHelpText] = useState(false);\n  const [showModalBoard, setShowModalBoard] = useState(false);\n  const [showEditBoard, setShowEditBoard] = useState(false);\n  const [editingBoardId, setEditingBoardId] = useState(null);\n  const [activeBoardId, setActiveBoardId] = useState(null);\n  const [isHelpBarHovered, setIsHelpBarHovered] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const boardListRef = useRef(null);\n\n  const dispatch = useDispatch();\n  const getBoard = useSelector(getBoardSelector);\n\n  const getColumnTasksLength = useSelector(getColumn).length;\n\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate('/');\n  };\n\n  const handleSetActiveBoard = boardId => {\n    dispatch(updateBoardActive({ boardId, isActive: true }));\n  };\n\n  const openModal = (setter, data) => () => {\n    setter(true);\n    if (data) {\n      setEditingBoardId(data._id);\n    }\n  };\n\n  const closeModal = setter => () => {\n    setter(false);\n    setEditingBoardId(null);\n  };\n\n  const handleCreateBoard = (boardData, isEdit) => {\n    const boardMainData = {\n      title: boardData.values.boardTitle,\n      background: boardData.background,\n      icon: boardData.icon,\n    };\n\n    const operation = isEdit ? editBoard : createBoard;\n\n    dispatch(\n      operation(\n        isEdit ? { id: editingBoardId, data: boardMainData } : boardMainData\n      )\n    )\n      .then(response => {\n        if (boardListRef.current && isEdit === false) {\n          boardListRef.current.scrollTop = boardListRef.current.scrollHeight;\n        }\n        if (isEdit === false) {\n          handleSetActiveBoard(response.payload._id);\n        }\n        if (isEdit === false) {\n          handleBoardInfo(response.payload._id);\n        } else {\n          handleBoardInfo(editingBoardId);\n        }\n        closeModal(setShowEditBoard)();\n      })\n      .catch(error => {\n        console.error(\n          isEdit\n            ? 'Помилка при редагуванні борду:'\n            : 'Помилка при створенні борду:',\n          error\n        );\n      });\n  };\n\n  const handleDeleteBoard = id => {\n    dispatch(deleteBoard(id)).catch(error => {\n      console.error('Помилка при видаленні борду:', error);\n    });\n    setShowConfirm(false);\n  };\n\n  const handleBoardInfo = boardId => {\n    dispatch(getBoardId(boardId));\n  };\n\n  const onMouseEnterHelpBtn = () => {\n    setShowHelpText(true);\n  };\n\n  const onMouseLeaveHelpBtn = () => {\n    setShowHelpText(false);\n  };\n\n  const handleOpen = () => {\n    setShowConfirm(true);\n  };\n\n  const handleClose = () => {\n    setShowConfirm(false);\n  };\n\n  return (\n    <SidebarContainer>\n      <div>\n        <Logo>\n          <IconLogo>\n            <use href={`${icons}#icon-logo`}></use>\n          </IconLogo>\n          <div>Task Pro</div>\n        </Logo>\n        <H3Board>My boards</H3Board>\n        <CreateBoard>\n          <div>\n            Create a<br></br> new board\n          </div>\n          <div>\n            <IconPlus onClick={openModal(setShowModalBoard)}>\n              <use href={`${icons}#icon-plus`}></use>\n            </IconPlus>\n            {showModalBoard && (\n              <ModalBoard\n                onClose={() => closeModal(setShowModalBoard)()}\n                onCreateBoard={boardData => {\n                  handleCreateBoard(boardData, false);\n                }}\n                title=\"New board\"\n                btnName=\"Create\"\n              />\n            )}\n            {showEditBoard && (\n              <ModalBoard\n                onClose={() => closeModal(setShowEditBoard)()}\n                onEditBoard={boardData => {\n                  handleCreateBoard(boardData, true);\n                }}\n                title={editingBoardId ? 'Edit board' : 'New board'}\n                btnName={editingBoardId ? 'Edit' : 'Create'}\n                boardName={\n                  editingBoardId\n                    ? getBoard.find(board => board.isActive === true).title\n                    : ''\n                }\n                currentBoard={getBoard.find(board => board.isActive === true)}\n              />\n            )}\n          </div>\n        </CreateBoard>\n\n        <BoardList ref={boardListRef}>\n          {getBoard\n            .filter(board => board !== null)\n            .map(board => (\n              <BoardItem\n                key={board._id}\n                onClick={event => {\n                  if (!event.target.matches('#deleteTarget')) {\n                    handleBoardInfo(board._id);\n                    handleSetActiveBoard(board._id);\n                  }\n                  setActiveBoardId(board._id);\n                }}\n                isActiveProps={board.isActive === true}\n              >\n                <ProgName>\n                  <IconProgect>\n                    <use href={`${icons}#${board.icon}`}></use>\n                  </IconProgect>\n                  <div>\n                    <EllipsisText text={board.title} length={'15'} />\n                  </div>\n                </ProgName>\n                <IconEditCustom>\n                  <IconEdit onClick={openModal(setShowEditBoard, board)}>\n                    <use href={`${icons}#icon-pencil`}></use>\n                  </IconEdit>\n                  <IconEdit onClick={() => handleOpen()} id=\"deleteTarget\">\n                    <use href={`${icons}#icon-trash`}></use>\n                  </IconEdit>\n                </IconEditCustom>\n                <BorderRight isActive={board.isActive === true} />\n              </BoardItem>\n            ))}\n        </BoardList>\n      </div>\n\n      <div>\n        <div\n          onMouseEnter={() => {\n            setIsHelpBarHovered(true);\n            onMouseEnterHelpBtn();\n          }}\n          onMouseLeave={() => {\n            setIsHelpBarHovered(false);\n            onMouseLeaveHelpBtn();\n          }}\n        >\n          <HelpBar isHelpBarHovered={isHelpBarHovered}>\n            {showHelpText && (\n              <HelpTextContainer isHelpBarHovered={isHelpBarHovered}>\n                <HelpTxt>\n                  If you need help with{' '}\n                  <span style={{ color: '#bedbb0' }}>TaskPro</span>, check out\n                  our support resources or reach out to our customer support\n                  team.\n                </HelpTxt>\n              </HelpTextContainer>\n            )}\n          </HelpBar>\n\n          <HelpBtn\n            onClick={openModal(setShowModal)}\n            isHovered={isHelpBarHovered}\n          >\n            <IconHelp>\n              <use href={`${icons}#icon-help`}></use>\n            </IconHelp>\n            Need help?\n            <HelpImg src={plant} alt=\"Help\" />\n          </HelpBtn>\n\n          {showModal && <ModalNeedHelp onClose={closeModal(setShowModal)} />}\n        </div>\n\n        <LogOut onClick={handleLogout}>\n          <IconLogOut>\n            <use href={`${icons}#icon-logout`}></use>\n          </IconLogOut>\n          Log out\n        </LogOut>\n      </div>\n\n      {showConfirm && (\n        <ModalConfirm\n          onClose={handleClose}\n          onConfirm={() => handleDeleteBoard(activeBoardId)}\n          title={\n            getColumnTasksLength > 0\n              ? 'The board is not empty. Are you sure to delete it?'\n              : 'Are you sure?'\n          }\n        />\n      )}\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n","import styled from '@emotion/styled';\n\nconst BackdropContainer = styled.div`\n  @media (max-width: 1439px) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    z-index: 10;\n  }\n`;\n\nconst Backdrop = ({ onClick }) => {\n  return <BackdropContainer onClick={onClick} />;\n};\n\nexport default Backdrop;\n","import Header from 'components/Header/Header';\nimport ScreensPage from 'components/ScreensPage/ScreensPage';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport Backdrop from '../components/Sidebar/Backdrop';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Home = () => {\n  const [showSidebar, setShowSidebar] = useState(true);\n\n  const toggleSidebar = () => {\n    setShowSidebar(!showSidebar);\n  };\n\n  const handleWindowResize = () => {\n    if (window.innerWidth < 1440) {\n      setShowSidebar(false);\n    } else {\n      setShowSidebar(true);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        {showSidebar && <Sidebar />}\n        {showSidebar && <Backdrop onClick={toggleSidebar} />}\n        <div\n          style={{\n            flexGrow: '1',\n            height: '100vh',\n            maxHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <Header onToggleSidebar={toggleSidebar} />\n          <ScreensPage />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","var map = {\n\t\"./00.png\": 9527,\n\t\"./01.png\": 5680,\n\t\"./01d.jpg\": 2719,\n\t\"./01d2.jpg\": 1397,\n\t\"./01m.jpg\": 642,\n\t\"./01m2.jpg\": 2018,\n\t\"./01t.jpg\": 8887,\n\t\"./01t2.jpg\": 6394,\n\t\"./02.png\": 1090,\n\t\"./02d.jpg\": 3176,\n\t\"./02d2.jpg\": 6441,\n\t\"./02m.jpg\": 2273,\n\t\"./02m2.jpg\": 4305,\n\t\"./02t.jpg\": 5039,\n\t\"./02t2.jpg\": 6107,\n\t\"./03.png\": 2441,\n\t\"./03d.jpg\": 6108,\n\t\"./03d2.jpg\": 1311,\n\t\"./03m.jpg\": 6378,\n\t\"./03m2.jpg\": 3331,\n\t\"./03t.jpg\": 8860,\n\t\"./03t2.jpg\": 6034,\n\t\"./04.png\": 636,\n\t\"./04d.jpg\": 2941,\n\t\"./04d2.jpg\": 8630,\n\t\"./04m.jpg\": 2914,\n\t\"./04m2.jpg\": 815,\n\t\"./04t.jpg\": 627,\n\t\"./04t2.jpg\": 7914,\n\t\"./05.png\": 2660,\n\t\"./05d.jpg\": 9433,\n\t\"./05d2.jpg\": 7532,\n\t\"./05m.jpg\": 5141,\n\t\"./05m2.jpg\": 4083,\n\t\"./05t.jpg\": 5129,\n\t\"./05t2.jpg\": 4258,\n\t\"./06.png\": 6140,\n\t\"./06d.jpg\": 1320,\n\t\"./06d2.jpg\": 2430,\n\t\"./06m.jpg\": 5347,\n\t\"./06m2.jpg\": 7880,\n\t\"./06t.jpg\": 3102,\n\t\"./06t2.jpg\": 9422,\n\t\"./07.png\": 1298,\n\t\"./07d.jpg\": 8227,\n\t\"./07d2.jpg\": 384,\n\t\"./07m.jpg\": 5449,\n\t\"./07m2.jpg\": 250,\n\t\"./07t.jpg\": 1858,\n\t\"./07t2.jpg\": 990,\n\t\"./08.png\": 7755,\n\t\"./08d.jpg\": 895,\n\t\"./08d2.jpg\": 2458,\n\t\"./08m.jpg\": 9770,\n\t\"./08m2.jpg\": 5839,\n\t\"./08t.jpg\": 6173,\n\t\"./08t2.jpg\": 9834,\n\t\"./09.png\": 661,\n\t\"./09d.jpg\": 3405,\n\t\"./09d2.jpg\": 7865,\n\t\"./09m.jpg\": 7896,\n\t\"./09m2.jpg\": 733,\n\t\"./09t.jpg\": 8026,\n\t\"./09t2.jpg\": 2001,\n\t\"./10.png\": 1709,\n\t\"./10d.jpg\": 3746,\n\t\"./10d2.jpg\": 8178,\n\t\"./10m.jpg\": 8304,\n\t\"./10m2.jpg\": 8558,\n\t\"./10t.jpg\": 1911,\n\t\"./10t2.jpg\": 3312,\n\t\"./11.png\": 3279,\n\t\"./11d.jpg\": 7270,\n\t\"./11d2.jpg\": 6663,\n\t\"./11m.jpg\": 1923,\n\t\"./11m2.jpg\": 827,\n\t\"./11t.jpg\": 3168,\n\t\"./11t2.jpg\": 2938,\n\t\"./12.png\": 8270,\n\t\"./12d.jpg\": 8755,\n\t\"./12d2.jpg\": 4740,\n\t\"./12m.jpg\": 1643,\n\t\"./12m2.jpg\": 4573,\n\t\"./12t.jpg\": 8069,\n\t\"./12t2.jpg\": 7380,\n\t\"./13.png\": 701,\n\t\"./13d.jpg\": 6892,\n\t\"./13d2.jpg\": 3024,\n\t\"./13m.jpg\": 5875,\n\t\"./13m2.jpg\": 4427,\n\t\"./13t.jpg\": 2513,\n\t\"./13t2.jpg\": 3694,\n\t\"./14.png\": 5247,\n\t\"./14d.jpg\": 2184,\n\t\"./14d2.jpg\": 6372,\n\t\"./14m.jpg\": 1016,\n\t\"./14m2.jpg\": 9717,\n\t\"./14t.jpg\": 7936,\n\t\"./14t2.jpg\": 1862,\n\t\"./15.png\": 1646,\n\t\"./15d.jpg\": 4808,\n\t\"./15d2.jpg\": 5271,\n\t\"./15m.jpg\": 1179,\n\t\"./15m2.jpg\": 3838,\n\t\"./15t.jpg\": 6737,\n\t\"./15t2.jpg\": 3019\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 9636;"],"names":["Container","styled","AvasarSetin","IconAvatar","IconPlus","AvatarImg","Wrapper","AvatarWrapper","IconUser","FileInputWrapper","FileInput","Inputs","PasswordInput","PasswordView","PasswordIcon","Svg","SendBtn","ErrorText","ErrorMessage","onClose","dispatch","useDispatch","userData","useSelector","getUserData","useState","imageUrl","setImageUrl","imageFile","setImageFile","name","userName","setUserName","email","userEmail","setUserEmail","showPassword","setShowPassword","useEffect","reader","FileReader","onload","event","target","result","readAsDataURL","onSubmit","e","preventDefault","elements","password","newUserData","value","avatar","updateUser","initialValues","validationSchema","UpdateUserSchema","avatarURL","src","alt","width","height","href","sprite","type","onChange","files","accept","autoFocus","placeholder","component","className","onClick","eyeHide","stroke","BackdropStyled","ModalWindowStyled","props","custom","CloseBtnStyled","IconStyled","children","onCloseEscape","key","stopPropagation","window","addEventListener","removeEventListener","currentTarget","TitleStyled","setName","showModal","setShowModal","icons","IconBM","HeaderInfo","CustomSelect","CustomOptionList","open","CustomOption","selected","TheamBtn","IconDown","onToggleSidebar","initialTheme","getTheme","theme","setTheme","useLayoutEffect","document","documentElement","setAttribute","useTheme","selectedTheme","setSelectedTheme","isCustomOptionListOpen","setCustomOptionListOpen","toggleCustomOptionList","updateTheme","isBoardActive","picture","TutorialContainer","TutorialTitle","TutorialSelected","ScreensHeader","HeadersWrapper","HeaderTxt","HeaderFiltres","HeaderAddColumn","IconFiltre","IconPlusFilters","AddColumn","ColumnsContainer","ButtonAdd","ColumnWrapper","StyledButton","Button","StyledEngineProvider","injectFirst","PlusIcon","AddIcon","StyledBlackPlusButton","BlackPlusButton","StyledInputField","Field","InputField","text","id","onRadioChange","currentPriority","Box","sx","display","flexDirection","alignItems","RadioGroup","defaultValue","ev","gap","row","radioColor","static","checked","additional","map","button","FormControlLabel","margin","control","Radio","color","backgroundColor","disableRipple","ErrorTextStyled","TextareaStyled","SubtitleStyled","LabelStyled","DatePickerWrapper","violet","SvgBlue","SpanStyled","TitleSchema","Yup","shape","cardTitle","required","cardDescr","modalTitle","title","btnName","cardDescription","deadline","column","taskId","registerLocale","uk","Date","startDate","setStartDate","priority","setPriority","compareDate","curDate","toISOString","split","dateNow","now","values","resetForm","description","form","editCard","body","addCard","handleChange","htmlFor","as","locale","date","minDate","dateFormat","ModalWrapper","RadioWrapper","StyledLabel","StyledInput","ColumnTitle","Icon","view","_id","columnID","radioColumns","getColumn","el","filter","col","length","onInputChange","replaceCard","EllipsisText","PropTypes","onCloseProgress","modalRef","useRef","ref","ButtonStyled","onConfirm","CardWrapper","PriorityWrapper","Title","SubTitle","PrioryTitle","PriorySubTitle","DeadlineSubTitle","DeadlineTitle","Ball","Line","Bell","IconWrapper","isEqualDate","task","columns","showProgressModal","setShowProgressModal","showConfirm","setShowConfirm","formattedDate","formatDate","deadlineDate","year","getFullYear","month","String","getMonth","padStart","day","getDate","xlinkHref","deleteCard","columnTitle","board","getBoardId","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","some","toLowerCase","toast","editColumn","addColumn","onFilterChange","onModalClose","setTimeout","label","labelColor","onChecked","fontFamily","fontSize","letterSpacing","FormStyled","BoxStyled","BoardItem","ProgName","IconEditCustom","IconEdit","columnId","tasksInColumn","deleteColumn","tasks","showModalAddCard","setShowModalAddCard","showFilters","setShowFilters","priorityFilter","setPriorityFilter","colId","setColId","boardBg","getBoardBg","boards","getBoard","find","isActive","headerSize","setHeaderSize","handleWindowResize","innerWidth","boardName","getBoardName","toSorted","a","b","updatedAt","localeCompare","card","includes","StyledRadioWrapper","onChangeImage","currentBoardBackground","selectedValue","setSelectedValue","image","index","nanoid","substring","paddedIndex","toString","backgroundValue","handleRadioChange","require","StyledSVG","onChangeIcon","currentBoardIcon","icon","Duplicate","boardTitle","updatedBackground","updatedIcon","onCreateBoard","onEditBoard","currentBoard","backgroundName","setBackgroundName","iconName","setIconName","isDuplicate","setIsDuplicate","getBoardSelector","background","fetchHelpApi","data","axios","response","payload","message","NeedHelpSchema","comment","getUserEmail","SidebarContainer","Logo","IconLogo","H3Board","CreateBoard","BoardList","isActiveProps","BorderRight","IconProgect","fadeInAnimation","keyframes","HelpBar","HelpTextContainer","isHelpBarHovered","css","HelpBtn","isHovered","HelpImg","HelpTxt","IconHelp","LogOut","IconLogOut","showHelpText","setShowHelpText","showModalBoard","setShowModalBoard","showEditBoard","setShowEditBoard","editingBoardId","setEditingBoardId","activeBoardId","setActiveBoardId","setIsHelpBarHovered","boardListRef","getColumnTasksLength","navigate","useNavigate","handleSetActiveBoard","boardId","updateBoardActive","openModal","setter","closeModal","handleCreateBoard","boardData","isEdit","boardMainData","operation","editBoard","createBoard","then","current","scrollTop","scrollHeight","handleBoardInfo","catch","error","console","matches","onMouseEnter","onMouseLeave","style","logout","deleteBoard","BackdropContainer","showSidebar","setShowSidebar","toggleSidebar","flexGrow","maxHeight","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}